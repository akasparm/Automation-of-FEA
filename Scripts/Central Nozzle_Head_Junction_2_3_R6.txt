
# Python Script, API Version = V19
while GetRootPart().Bodies.Count>0:
    GetRootPart().Bodies[0].Delete()

while GetRootPart().Curves.Count>0:
    GetRootPart().Curves[0].Delete()

while GetRootPart().DatumPlanes.Count>0:
    GetRootPart().DatumPlanes[0].Delete()

while GetRootPart().Components.Count>0:
    GetRootPart().Components[0].Delete()


from math import sin, cos, asin, acos, sqrt, atan, tan

nozzle_t = Parameters.Nozzle_Type
unit = Parameters.Unit

if(unit not in [1,2]):
    print("Invalid unit input")
    
elif(nozzle_t not in [2,3]):
    print("Invalid Nozzle Type input")
    
else:

    if(unit ==1):

        if(nozzle_t ==2):
            shell_id = float(Parameters.Shell_BMID)
            shell_th = float(Parameters.Shell_Thk)
            head_ir = float(Parameters.Head_BMIR)
            head_th = float(Parameters.Head_Thk)
            manway_top = float(Parameters.Nozzle_Projection_from_TL)
            bm_id = float(Parameters.Nozzle_BMID)
            neck_od = float(Parameters.Neck_OD)
            hub_od = float(Parameters.Hub_OD)
            hub_hg = float(Parameters.Hub_Min_Height)
            angle = DEG(Parameters.Hub_to_Neck_Angle)
            lip_od = float(Parameters.Lip_OD)
            flange_th = float(Parameters.Flange_Thk)
            bcd = float(Parameters.BCD)
            stud_d = float(Parameters.Bolt_Hole_Dia)
            dist = float(Parameters.Total_Nozzle_Height)
            weld_ol = Parameters.Weld_Overlay_on_Flange_Face
            hub_lower_inner_fil = Parameters.Nozzle_Head_Inside_Fillet
            hub_lower_fil = Parameters.Nozzle_Head_Outside_Fillet
            Hub_Neck_Fillet = Parameters.Hub_Neck_Fillet
            
            
            # Set Sketch Plane
            selection = Plane.PlaneXY
            result = ViewHelper.SetSketchPlane(selection, None)
            # EndBlock

            result = SketchCircle.Create(Point2D.Create(MM(0), MM(0)), MM(head_ir))


            # Set New Sketch
            result = SketchHelper.StartConstraintSketching()
            # EndBlock

            # Offset Sketch Curve
            result = SketchOffsetCurve.Create(Selection.Create(GetRootPart().DatumPlanes[0].Curves[0]), MM(-head_th))
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(bm_id*0.5), MM(0))
            end = Point2D.Create(MM(bm_id*0.5), MM(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(bm_id*0.5), MM(manway_top-weld_ol-flange_th))
            end = Point2D.Create(MM(neck_od*0.5), MM(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock


            # Sketch Line
            start = Point2D.Create(MM(hub_od*0.5), MM((head_ir+head_th)*sin(acos(hub_od*0.5/(head_ir+head_th)))))
            end = Point2D.Create(MM(hub_od*0.5), MM((head_ir+head_th) + hub_hg))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(neck_od*0.5), MM(((hub_od*0.5-neck_od*0.5)/cos(angle))*sin(angle) + (head_ir+head_th) + hub_hg))
            end = Point2D.Create(MM(hub_od*0.5), MM((head_ir+head_th) + hub_hg))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(neck_od*0.5), MM(((hub_od*0.5-neck_od*0.5)/cos(angle))*sin(angle) + (head_ir+head_th) + hub_hg))
            end = Point2D.Create(MM(neck_od*0.5), MM(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Create Line
            SketchLine.Create(Point2D.Create(MM(head_ir*(cos(asin((manway_top - weld_ol - flange_th-dist)/head_ir)))), MM(manway_top - weld_ol - flange_th-dist)), Point2D.Create(MM(bm_id/2), MM(manway_top - weld_ol - flange_th-dist)))
            # EndBlock


            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
            end = Point2D.Create(MM((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            end = Point2D.Create(MM((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            end = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(MM(shell_id*0.5), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock



            #Split---------------------------------------------------------------------

            # Sketch Line
            #1/3.0 of difference b/w hub od and shell id + hub od, radial split, tan(theta) = y/x.
            start = Point2D.Create(MM((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5),MM(head_ir*sin(acos(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir))))
            end = Point2D.Create(MM((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5 + head_th*(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir)),MM((head_ir+head_th)*sin(acos(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock

            #Revolution-------------------------------------------------


            # Solidify Sketch
            mode = InteractionMode.Solid
            result = ViewHelper.SetViewMode(mode, None)
            # EndBlock


            # Revolve 3 Faces
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[1],
                GetRootPart().Bodies[0].Faces[7],
                GetRootPart().Bodies[0].Faces[6]])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.Add
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Revolve 1 Face
            selection = FaceSelection.Create(GetRootPart().Bodies[0].Faces[5])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.ForceIndependent
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Revolve 3 Faces
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[7],
                GetRootPart().Bodies[0].Faces[6],
                GetRootPart().Bodies[0].Faces[1]])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.ForceIndependent
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Revolve 3 Faces
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[2],
                GetRootPart().Bodies[0].Faces[1],
                GetRootPart().Bodies[0].Faces[0]])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.ForceIndependent
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Delete Selection
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[1],
                GetRootPart().Bodies[0].Faces[0]])
            result = Delete.Execute(selection)
            # EndBlock

            # Set Sketch Plane
            selection = Plane.PlaneXY
            result = ViewHelper.SetSketchPlane(selection, None)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(0), MM(0))
            end = Point2D.Create(MM(100*lip_od*0.5/head_ir), MM(100*sin(acos(lip_od*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock


            # Sketch Line
            start = Point2D.Create(MM(0), MM(-5/3*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(MM(100), MM(-5/3*((shell_id+shell_th)*0.5*shell_th)**0.5))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Solidify Sketch
            mode = InteractionMode.Solid
            result = ViewHelper.SetViewMode(mode, None)
            # EndBlock

            if(hub_od == neck_od):
                
                # Sketch Point
                SketchPoint.Create(Point2D.Create(MM((bcd-stud_d)/2), MM(manway_top-weld_ol-flange_th)))
                # EndBlock

                # Sketch Point
                SketchPoint.Create(Point2D.Create(MM((bcd+stud_d)/2), MM(manway_top-weld_ol-flange_th)))
                # EndBlock
                
                 # Sweep Point
                selection = Selection.Create(GetRootPart().Curves[2])
                revolveAxis = Line.Create(Point.Create(MM(0), MM(2167.58), MM(0)), 
                    -Direction.DirY)
                result = RevolvePoints.Execute(selection, revolveAxis, DEG(360), None)
                # EndBlock

                # Sweep Point
                selection = Selection.Create(GetRootPart().Curves[3])
                revolveAxis = Line.Create(Point.Create(MM(0), MM(2167.58), MM(0)), 
                    -Direction.DirY)
                result = RevolvePoints.Execute(selection, revolveAxis, DEG(360), None)
                # EndBlock
                
                # Split Faces
                options = SplitFaceOptions()
                selection = FaceSelection.Create(GetRootPart().Bodies[0].Faces[0])
                cutter = Selection.Create(GetRootPart().Curves[4])
                result = SplitFace.ByCutter(selection, cutter, options)
                # EndBlock

                # Split Faces
                options = SplitFaceOptions()
                selection = FaceSelection.Create(GetRootPart().Bodies[0].Faces[7])
                cutter = Selection.Create(GetRootPart().Curves[5])
                result = SplitFace.ByCutter(selection, cutter, options)
                # EndBlock
                
                # Revolve 1 Sketch Curve
                selection = Selection.Create(GetRootPart().Curves[0])
                result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
                    -Direction.DirY), DEG(360), False, ExtrudeType.None)
                # EndBlock

                # Revolve 1 Sketch Curve
                selection = Selection.Create(GetRootPart().Curves[0])
                result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
                    -Direction.DirY), DEG(360), False, ExtrudeType.None)
                # EndBlock

                # Delete Objects
                selection = Selection.Create(GetRootPart().GetChildren[IDocObject]()[-1])
                result = Delete.Execute(selection)
                # EndBlock

                # Slice Body by Faces
                selection = BodySelection.Create(GetRootPart().Bodies[0])
                toolFaces = FaceSelection.Create(GetRootPart().Bodies[4].Faces[0])
                result = SplitBody.ByCutter(selection, toolFaces, True)
                # EndBlock


                # Slice Body by Faces
                selection = BodySelection.Create(GetRootPart().Bodies[3])
                toolFaces = FaceSelection.Create(GetRootPart().Bodies[5].Faces[0])
                result = SplitBody.ByCutter(selection, toolFaces, True)
                # EndBlock

                # Delete Selection
                selection = Selection.Create([GetRootPart().GetChildren[IDocObject]()[-1],
                    GetRootPart().Bodies[5],
                    GetRootPart().Bodies[4]])
                result = Delete.Execute(selection)
                # EndBlock

                # Delete Objects
                selection = Selection.Create(GetRootPart().GetChildren[IDocObject]()[-1])
                result = Delete.Execute(selection)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[0].Edges[2])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, MM(hub_lower_fil), options, None)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[0].Edges[3])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, MM(hub_lower_inner_fil), options, None)
                # EndBlock



                #Vertical Split-------------------------------------

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneXY
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneYZ
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                # Delete Selection
                selection = Selection.Create(GetRootPart().GetChildren[IDocObject]()[-1])
                result = Delete.Execute(selection)
                # EndBlock

                # Delete Selection
                selection = Selection.Create(GetRootPart().GetChildren[IDocObject]()[-1])
                result = Delete.Execute(selection)
                # EndBlock

                #Named Selection-----------------------------------------------------------
            
                    
                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[7].Faces[3],
                    GetRootPart().Bodies[8].Faces[4],
                    GetRootPart().Bodies[9].Faces[2],
                    GetRootPart().Bodies[11].Faces[2],
                    GetRootPart().Bodies[5].Faces[2],
                    GetRootPart().Bodies[3].Faces[2],
                    GetRootPart().Bodies[2].Faces[3],
                    GetRootPart().Bodies[1].Faces[4],
                    GetRootPart().Bodies[4].Faces[4],
                    GetRootPart().Bodies[10].Faces[5],
                    GetRootPart().Bodies[6].Faces[6],
                    GetRootPart().Bodies[6].Faces[4],
                    GetRootPart().Bodies[0].Faces[2],
                    GetRootPart().Bodies[0].Faces[4],
                    GetRootPart().Bodies[0].Faces[6],
                    GetRootPart().Bodies[6].Faces[2],
                    GetRootPart().Bodies[6].Faces[3],
                    GetRootPart().Bodies[0].Faces[8],
                    GetRootPart().Bodies[18].Faces[3],
                    GetRootPart().Bodies[18].Faces[2],
                    GetRootPart().Bodies[18].Faces[4],
                    GetRootPart().Bodies[18].Faces[6],
                    GetRootPart().Bodies[22].Faces[5],
                    GetRootPart().Bodies[19].Faces[3],
                    GetRootPart().Bodies[20].Faces[4],
                    GetRootPart().Bodies[21].Faces[2],
                    GetRootPart().Bodies[23].Faces[2],
                    GetRootPart().Bodies[17].Faces[2],
                    GetRootPart().Bodies[15].Faces[2],
                    GetRootPart().Bodies[14].Faces[3],
                    GetRootPart().Bodies[13].Faces[4],
                    GetRootPart().Bodies[16].Faces[4],
                    GetRootPart().Bodies[12].Faces[2],
                    GetRootPart().Bodies[12].Faces[4],
                    GetRootPart().Bodies[12].Faces[6],
                    GetRootPart().Bodies[12].Faces[8]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Internal Pressue Surface")
                # EndBlock

               # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[18].Faces[7],
                    GetRootPart().Bodies[12].Faces[12],
                    GetRootPart().Bodies[0].Faces[12],
                    GetRootPart().Bodies[6].Faces[7]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[11].Faces[5],
                    GetRootPart().Bodies[5].Faces[3],
                    GetRootPart().Bodies[17].Faces[3],
                    GetRootPart().Bodies[23].Faces[5]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Displacement")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[3],
                    GetRootPart().Bodies[12].Edges[4]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_To_Head_Edge_Sizing")
                # EndBlock


                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[9],
                    GetRootPart().Bodies[12].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[12].Edges[0],
                    GetRootPart().Bodies[0].Edges[0]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[8],
                    GetRootPart().Bodies[0].Edges[6],
                    GetRootPart().Bodies[0].Edges[4],
                    GetRootPart().Bodies[12].Edges[7],
                    GetRootPart().Bodies[12].Edges[5],
                    GetRootPart().Bodies[12].Edges[3]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Hub_Thk_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[1].Edges[1],
                    GetRootPart().Bodies[13].Edges[2]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[12].Faces[0],
                    GetRootPart().Bodies[12].Faces[1]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[6].Edges[29],
                    GetRootPart().Bodies[0].Edges[24],
                    GetRootPart().Bodies[18].Edges[29],
                    GetRootPart().Bodies[12].Edges[24]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[21].Edges[11],
                    GetRootPart().Bodies[9].Edges[11],
                    GetRootPart().Bodies[3].Edges[10],
                    GetRootPart().Bodies[15].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
                # EndBlock
                
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[7].Edges[11],
                    GetRootPart().Bodies[19].Edges[11],
                    GetRootPart().Bodies[1].Edges[10],
                    GetRootPart().Bodies[13].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_Trans_To_Head_Circum_Edge_Sizing")
                # EndBlock


                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[9],
                    GetRootPart().Bodies[7].Edges[9],
                    GetRootPart().Bodies[1].Edges[8],
                    GetRootPart().Bodies[13].Edges[8]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Trans_Circum_Edge_Sizing")
                # EndBlock

            else:
                
                # Revolve 1 Sketch Curve
                selection = Selection.Create(GetRootPart().Curves[0])
                result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(-1727.03136378403), MM(0)), 
                    -Direction.DirY), DEG(360), False, ExtrudeType.None)
                # EndBlock

                # Revolve 1 Sketch Curve
                selection = Selection.Create(GetRootPart().Curves[0])
                result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(-1727.03136378403), MM(0)), 
                    -Direction.DirY), DEG(360), False, ExtrudeType.None)
                # EndBlock

                # Slice Body by Faces
                selection = BodySelection.Create(GetRootPart().Bodies[0])
                toolFaces = FaceSelection.Create(GetRootPart().Bodies[4].Faces[0])
                result = SplitBody.ByCutter(selection, toolFaces, True)
                # EndBlock

                # Slice Body by Faces
                selection = BodySelection.Create(GetRootPart().Bodies[3])
                toolFaces = FaceSelection.Create(GetRootPart().Bodies[5].Faces[0])
                result = SplitBody.ByCutter(selection, toolFaces, True)
                # EndBlock
                
                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[0].Edges[4])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, MM(hub_lower_fil), options, None)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[0].Edges[5])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, MM(hub_lower_inner_fil), options, None)
                # EndBlock

                # Delete Objects
                selection = Selection.Create([GetRootPart().Bodies[4],
                    GetRootPart().Bodies[5],
                    GetRootPart().GetChildren[IDocObject]()[-1]])
                result = Delete.Execute(selection)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneXY
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneYZ
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[11].Faces[2],
                    GetRootPart().Bodies[9].Faces[2],
                    GetRootPart().Bodies[7].Faces[3],
                    GetRootPart().Bodies[10].Faces[5],
                    GetRootPart().Bodies[8].Faces[4],
                    GetRootPart().Bodies[5].Faces[2],
                    GetRootPart().Bodies[3].Faces[2],
                    GetRootPart().Bodies[2].Faces[3],
                    GetRootPart().Bodies[1].Faces[4],
                    GetRootPart().Bodies[19].Faces[3],
                    GetRootPart().Bodies[20].Faces[4],
                    GetRootPart().Bodies[21].Faces[2],
                    GetRootPart().Bodies[23].Faces[2],
                    GetRootPart().Bodies[22].Faces[5],
                    GetRootPart().Bodies[4].Faces[4],
                    GetRootPart().Bodies[0].Faces[4],
                    GetRootPart().Bodies[6].Faces[4],
                    GetRootPart().Bodies[18].Faces[4],
                    GetRootPart().Bodies[18].Faces[6],
                    GetRootPart().Bodies[6].Faces[6],
                    GetRootPart().Bodies[0].Faces[2],
                    GetRootPart().Bodies[12].Faces[4],
                    GetRootPart().Bodies[12].Faces[2],
                    GetRootPart().Bodies[16].Faces[4],
                    GetRootPart().Bodies[13].Faces[4],
                    GetRootPart().Bodies[14].Faces[3],
                    GetRootPart().Bodies[15].Faces[2],
                    GetRootPart().Bodies[17].Faces[2],
                    GetRootPart().Bodies[12].Faces[6],
                    GetRootPart().Bodies[12].Faces[8],
                    GetRootPart().Bodies[18].Faces[2],
                    GetRootPart().Bodies[18].Faces[3],
                    GetRootPart().Bodies[6].Faces[2],
                    GetRootPart().Bodies[6].Faces[3],
                    GetRootPart().Bodies[0].Faces[6],
                    GetRootPart().Bodies[0].Faces[8]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Internal Pressue Surface")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[18].Faces[5],
                    GetRootPart().Bodies[6].Faces[5],
                    GetRootPart().Bodies[0].Faces[10],
                    GetRootPart().Bodies[12].Faces[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[23].Faces[5],
                    GetRootPart().Bodies[17].Faces[3],
                    GetRootPart().Bodies[5].Faces[3],
                    GetRootPart().Bodies[11].Faces[5]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Displacement")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[12].Edges[4],
                    GetRootPart().Bodies[0].Edges[3]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_To_Head_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[9],
                    GetRootPart().Bodies[12].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[12].Edges[0],
                    GetRootPart().Bodies[0].Edges[0]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[8],
                    GetRootPart().Bodies[12].Edges[7]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Neck_Thk_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[1].Edges[1],
                    GetRootPart().Bodies[13].Edges[2]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[12].Faces[0],
                    GetRootPart().Bodies[12].Faces[1]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[10].Edges[9],
                    GetRootPart().Bodies[22].Edges[9],
                    GetRootPart().Bodies[4].Edges[8],
                    GetRootPart().Bodies[12].Edges[24]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[9].Edges[11],
                    GetRootPart().Bodies[21].Edges[11],
                    GetRootPart().Bodies[3].Edges[10],
                    GetRootPart().Bodies[15].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[11],
                    GetRootPart().Bodies[7].Edges[11],
                    GetRootPart().Bodies[1].Edges[10],
                    GetRootPart().Bodies[13].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_Trans_To_Head_Circum_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[9],
                    GetRootPart().Bodies[7].Edges[9],
                    GetRootPart().Bodies[1].Edges[8],
                    GetRootPart().Bodies[13].Edges[8]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Trans_Circum_Edge_Sizing")
                # EndBlock
                
                # Create 4 Rounds
                selection = EdgeSelection.Create([GetRootPart().Bodies[6].Edges[28],
                    GetRootPart().Bodies[18].Edges[28],
                    GetRootPart().Bodies[0].Edges[32],
                    GetRootPart().Bodies[12].Edges[32]])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, MM(Hub_Neck_Fillet), options, None)
                # EndBlock
            
            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[12],
                GetRootPart().Bodies[0],
                GetRootPart().Bodies[6],
                GetRootPart().Bodies[18]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock
        
            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[10],
                GetRootPart().Bodies[22],
                GetRootPart().Bodies[4],
                GetRootPart().Bodies[16]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Body_Sizing")
            # EndBlock



            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[7],
                GetRootPart().Bodies[1],
                GetRootPart().Bodies[19],
                GetRootPart().Bodies[13]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[20],
                GetRootPart().Bodies[8],
                GetRootPart().Bodies[14],
                GetRootPart().Bodies[2]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shell_Taper_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[21],
                GetRootPart().Bodies[9],
                GetRootPart().Bodies[3],
                GetRootPart().Bodies[15]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_1")
            # EndBlock



            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[17],
                GetRootPart().Bodies[23],
                GetRootPart().Bodies[11],
                GetRootPart().Bodies[5]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[12])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[16])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Transition_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[13])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[14])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shell_Junction_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[15])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # 
            result = NamedSelection.Rename("Group1", "Shell_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[17])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # 
            result = NamedSelection.Rename("Group1", "Shell_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[6],
                GetRootPart().Bodies[0],
                GetRootPart().Bodies[18]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[4],
                GetRootPart().Bodies[10],
                GetRootPart().Bodies[22]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Trasition_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create([GetRootPart().Bodies[1],
                GetRootPart().Bodies[7],
                GetRootPart().Bodies[19]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[2],
                GetRootPart().Bodies[8],
                GetRootPart().Bodies[20]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shel_Junction_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[3],
                GetRootPart().Bodies[9],
                GetRootPart().Bodies[21]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_1_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[11],
                GetRootPart().Bodies[23],
                GetRootPart().Bodies[5]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_2_2")
            # EndBlock

        else:
            shell_id = float(Parameters.Shell_BMID)
            shell_th = float(Parameters.Shell_Thk)
            head_ir = float(Parameters.Head_BMIR)
            head_th = float(Parameters.Head_Thk)
            manway_top = float(Parameters.Nozzle_Projection_from_TL)
            bm_id = float(Parameters.Nozzle_BMID)
            neck_od = float(Parameters.Neck_OD)
            hub_od = float(Parameters.Hub_OD)
            hub_hg = float(Parameters.Hub_Min_Height)
            angle = DEG(Parameters.Hub_to_Neck_Angle)
            lip_od = float(Parameters.Lip_OD)
            flange_th = float(Parameters.Flange_Thk)
            bcd = float(Parameters.BCD)
            stud_d = float(Parameters.Bolt_Hole_Dia)
            dist = float(Parameters.Total_Nozzle_Height)
            weld_ol = Parameters.Weld_Overlay_on_Flange_Face
            hub_lower_inner_fil = Parameters.Nozzle_Head_Inside_Fillet
            hub_lower_fil = Parameters.Nozzle_Head_Outside_Fillet
            Hub_Neck_Fillet = Parameters.Hub_Neck_Fillet

            # Set Sketch Plane
            selection = Plane.PlaneXY
            result = ViewHelper.SetSketchPlane(selection, None)
            # EndBlock

            result = SketchCircle.Create(Point2D.Create(MM(0), MM(0)), MM(head_ir))


            # Set New Sketch
            result = SketchHelper.StartConstraintSketching()
            # EndBlock
            
            # Offset Sketch Curve
            result = SketchOffsetCurve.Create(Selection.Create(GetRootPart().DatumPlanes[0].Curves[0]), MM(-head_th))
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(bm_id*0.5), MM(0))
            end = Point2D.Create(MM(bm_id*0.5), MM(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(bm_id*0.5), MM(manway_top-weld_ol-flange_th))
            end = Point2D.Create(MM(neck_od*0.5), MM(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock


            # Sketch Line
            start = Point2D.Create(MM(hub_od*0.5), MM((head_ir+head_th)*sin(acos(hub_od*0.5/(head_ir+head_th)))))
            end = Point2D.Create(MM(hub_od*0.5), MM((head_ir+head_th) + hub_hg))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(neck_od*0.5), MM(((hub_od*0.5-neck_od*0.5)/cos(angle))*sin(angle) + (head_ir+head_th) + hub_hg))
            end = Point2D.Create(MM(hub_od*0.5), MM((head_ir+head_th) + hub_hg))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(neck_od*0.5), MM(((hub_od*0.5-neck_od*0.5)/cos(angle))*sin(angle) + (head_ir+head_th) + hub_hg))
            end = Point2D.Create(MM(neck_od*0.5), MM(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
            end = Point2D.Create(MM((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            end = Point2D.Create(MM((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            end = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(MM(shell_id*0.5), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(shell_id*0.5), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock


            #Split---------------------------------------------------------------------

            # Sketch Line
            #1/3.0 of difference b/w hub od and shell id + hub od, radial split, tan(theta) = y/x.
            start = Point2D.Create(MM((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5),MM(head_ir*sin(acos(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir))))
            end = Point2D.Create(MM((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5 + head_th*(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir)),MM((head_ir+head_th)*sin(acos(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock
            
        

            #Revolve-------------------------------------------------------------------

            # Solidify Sketch
            mode = InteractionMode.Solid
            # EndBlock


            # Set Sketch Plane
            selection = Plane.PlaneXY
            result = ViewHelper.SetSketchPlane(selection, None)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(MM(0), MM(0))
            end = Point2D.Create(MM(100*lip_od*0.5/head_ir), MM(100*sin(acos(lip_od*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock


            # Sketch Line
            start = Point2D.Create(MM(0), MM(-5/3*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(MM(100), MM(-5/3*((shell_id+shell_th)*0.5*shell_th)**0.5))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Solidify Sketch
            mode = InteractionMode.Solid
            result = ViewHelper.SetViewMode(mode, None)
            # EndBlock

            # Revolve 5 Faces
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[1],
                GetRootPart().Bodies[0].Faces[6],
                GetRootPart().Bodies[0].Faces[10],
                GetRootPart().Bodies[0].Faces[9],
                GetRootPart().Bodies[0].Faces[2]])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.ForceIndependent
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Revolve 4 Faces
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[4],
                GetRootPart().Bodies[0].Faces[2],
                GetRootPart().Bodies[0].Faces[1],
                GetRootPart().Bodies[0].Faces[0]])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.ForceIndependent
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Revolve 2 Sketch Curves
            selection = Selection.Create([GetRootPart().Curves[0],
                GetRootPart().Curves[1]])
            result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
                Direction.DirY), DEG(360), False, ExtrudeType.ForceIndependent)
            # EndBlock

            # Slice Body by Faces
            selection = BodySelection.Create(GetRootPart().Bodies[4])
            toolFaces = FaceSelection.Create(GetRootPart().Bodies[6].Faces[0])
            result = SplitBody.ByCutter(selection, toolFaces, True)
            # EndBlock

            # Slice Body by Faces
            selection = BodySelection.Create(GetRootPart().Bodies[1])
            toolFaces = FaceSelection.Create(GetRootPart().Bodies[5].Faces[0])
            result = SplitBody.ByCutter(selection, toolFaces, True)
            # EndBlock

            #Named Selection----------------------------------------------------------------
            
            if(neck_od == hub_od):
                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[1].Edges[2])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, MM(hub_lower_fil), options, None)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[1].Edges[2])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, MM(hub_lower_inner_fil), options, None)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneXY
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneYZ
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                
                # Delete Objects
                selection = Selection.Create([GetRootPart().Bodies[0],
                    GetRootPart().Bodies[5],
                    GetRootPart().Bodies[6],
                    GetRootPart().Bodies[13],
                    GetRootPart().Bodies[14],
                    GetRootPart().Bodies[17],
                    GetRootPart().Bodies[22],
                    GetRootPart().Bodies[23],
                    GetRootPart().Bodies[30],
                    GetRootPart().Bodies[31],
                    GetRootPart().GetChildren[IDocObject]()[-1]])
                result = Delete.Execute(selection)
                # EndBlock
                
                      
                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[12].Faces[9],
                    GetRootPart().Bodies[12].Faces[6],
                    GetRootPart().Bodies[12].Faces[4],
                    GetRootPart().Bodies[6].Faces[2],
                    GetRootPart().Bodies[0].Faces[4],
                    GetRootPart().Bodies[0].Faces[9],
                    GetRootPart().Bodies[6].Faces[5],
                    GetRootPart().Bodies[6].Faces[3],
                    GetRootPart().Bodies[0].Faces[6],
                    GetRootPart().Bodies[18].Faces[5],
                    GetRootPart().Bodies[18].Faces[3],
                    GetRootPart().Bodies[18].Faces[2],
                    GetRootPart().Bodies[11].Faces[5],
                    GetRootPart().Bodies[5].Faces[4],
                    GetRootPart().Bodies[17].Faces[4],
                    GetRootPart().Bodies[23].Faces[5],
                    GetRootPart().Bodies[8].Faces[3],
                    GetRootPart().Bodies[2].Faces[4],
                    GetRootPart().Bodies[14].Faces[4],
                    GetRootPart().Bodies[20].Faces[3],
                    GetRootPart().Bodies[1].Faces[3],
                    GetRootPart().Bodies[7].Faces[4],
                    GetRootPart().Bodies[10].Faces[2],
                    GetRootPart().Bodies[4].Faces[2],
                    GetRootPart().Bodies[3].Faces[2],
                    GetRootPart().Bodies[9].Faces[2],
                    GetRootPart().Bodies[13].Faces[3],
                    GetRootPart().Bodies[19].Faces[4],
                    GetRootPart().Bodies[22].Faces[2],
                    GetRootPart().Bodies[16].Faces[2],
                    GetRootPart().Bodies[15].Faces[2],
                    GetRootPart().Bodies[21].Faces[2]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Internal Pressure Surface")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[9].Faces[4],
                    GetRootPart().Bodies[3].Faces[3],
                    GetRootPart().Bodies[15].Faces[3],
                    GetRootPart().Bodies[21].Faces[4]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell Displacement")
                # EndBlock


                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[3],
                    GetRootPart().Bodies[12].Edges[4]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_To_Head_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[7],
                    GetRootPart().Bodies[12].Edges[7]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[12].Edges[0],
                    GetRootPart().Bodies[0].Edges[0]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[4],
                    GetRootPart().Bodies[12].Edges[3]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Hub_Thk_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[18].Edges[19],
                    GetRootPart().Bodies[12].Edges[16],
                    GetRootPart().Bodies[6].Edges[19],
                    GetRootPart().Bodies[0].Edges[16]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[12].Faces[0],
                    GetRootPart().Bodies[12].Faces[1]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
                # EndBlock
            
                
                
                # Set Sketch Plane
                selection = Plane.PlaneXY
                result = ViewHelper.SetSketchPlane(selection, None)
                # EndBlock

                # Set New Sketch
                result = SketchHelper.StartConstraintSketching()
                # EndBlock
                
                 # Sketch Point
                point = Point2D.Create(MM((bcd-stud_d)*0.5), MM(manway_top-weld_ol-flange_th))
                result = SketchPoint.Create(point)
                # EndBlock
                
                # Sketch Point
                point = Point2D.Create(MM((bcd+stud_d)*0.5), MM(manway_top-weld_ol-flange_th))
                result = SketchPoint.Create(point)
                # EndBlock

                # Solidify Sketch
                mode = InteractionMode.Solid
                result = ViewHelper.SetViewMode(mode, None)
                # EndBlock

                
                # Sweep Point
                selection = Selection.Create(GetRootPart().Curves[0])
                revolveAxis = Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
                    Direction.DirY)
                result = RevolvePoints.Execute(selection, revolveAxis, DEG(360), None)
                # EndBlock

                # Sweep Point
                selection = Selection.Create(GetRootPart().Curves[2])
                revolveAxis = Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
                    Direction.DirY)
                result = RevolvePoints.Execute(selection, revolveAxis, DEG(360), None)
                # EndBlock

                # Split Faces
                options = SplitFaceOptions()
                selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[8],
                    GetRootPart().Bodies[6].Faces[7],
                    GetRootPart().Bodies[18].Faces[7],
                    GetRootPart().Bodies[12].Faces[8]])
                cutter = Selection.Create(GetRootPart().Curves[0])
                result = SplitFace.ByCutter(selection, cutter, options)
                # EndBlock

                # Split Faces
                options = SplitFaceOptions()
                selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[10],
                    GetRootPart().Bodies[6].Faces[10],
                    GetRootPart().Bodies[18].Faces[10],
                    GetRootPart().Bodies[12].Faces[10]])
                cutter = Selection.Create(GetRootPart().Curves[1])
                result = SplitFace.ByCutter(selection, cutter, options)
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[18].Faces[10],
                    GetRootPart().Bodies[6].Faces[10],
                    GetRootPart().Bodies[0].Faces[10],
                    GetRootPart().Bodies[12].Faces[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[8].Edges[11],
                    GetRootPart().Bodies[20].Edges[11],
                    GetRootPart().Bodies[14].Edges[10],
                    GetRootPart().Bodies[2].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_Trans_To_Head_Circum_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[7].Edges[8],
                    GetRootPart().Bodies[19].Edges[8],
                    GetRootPart().Bodies[13].Edges[9],
                    GetRootPart().Bodies[1].Edges[9]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Trans_Circum_Edge_Sizing")
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[15].Edges[11],
                    GetRootPart().Bodies[21].Edges[10],
                    GetRootPart().Bodies[9].Edges[10],
                    GetRootPart().Bodies[3].Edges[11]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[13].Edges[2],
                    GetRootPart().Bodies[1].Edges[1]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # 
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
                # EndBlock


            else:
                            
                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[1].Edges[4])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, MM(hub_lower_fil), options, None)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[1].Edges[2])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, MM(Hub_Neck_Fillet), options, None)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[1].Edges[3])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, MM(hub_lower_inner_fil), options, None)
                # EndBlock


                # Delete Objects
                selection = Selection.Create([GetRootPart().Bodies[0],
                    GetRootPart().Bodies[5],
                    GetRootPart().Bodies[6],
                    GetRootPart().GetChildren[IDocObject]()[-1]])
                result = Delete.Execute(selection)
                # EndBlock
                
                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneXY
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneYZ
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[9].Faces[2],
                    GetRootPart().Bodies[21].Faces[2],
                    GetRootPart().Bodies[22].Faces[2],
                    GetRootPart().Bodies[10].Faces[2],
                    GetRootPart().Bodies[3].Faces[2],
                    GetRootPart().Bodies[4].Faces[2],
                    GetRootPart().Bodies[1].Faces[3],
                    GetRootPart().Bodies[7].Faces[4],
                    GetRootPart().Bodies[19].Faces[4],
                    GetRootPart().Bodies[20].Faces[3],
                    GetRootPart().Bodies[8].Faces[3],
                    GetRootPart().Bodies[2].Faces[4],
                    GetRootPart().Bodies[5].Faces[4],
                    GetRootPart().Bodies[11].Faces[5],
                    GetRootPart().Bodies[23].Faces[5],
                    GetRootPart().Bodies[18].Faces[11],
                    GetRootPart().Bodies[6].Faces[11],
                    GetRootPart().Bodies[0].Faces[5],
                    GetRootPart().Bodies[0].Faces[3],
                    GetRootPart().Bodies[6].Faces[10],
                    GetRootPart().Bodies[6].Faces[8],
                    GetRootPart().Bodies[0].Faces[2],
                    GetRootPart().Bodies[18].Faces[10],
                    GetRootPart().Bodies[18].Faces[8],
                    GetRootPart().Bodies[12].Faces[2],
                    GetRootPart().Bodies[12].Faces[3],
                    GetRootPart().Bodies[12].Faces[5],
                    GetRootPart().Bodies[17].Faces[4],
                    GetRootPart().Bodies[14].Faces[4],
                    GetRootPart().Bodies[13].Faces[3],
                    GetRootPart().Bodies[16].Faces[2],
                    GetRootPart().Bodies[15].Faces[2]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Internal Pressure Surface")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[6].Faces[6],
                    GetRootPart().Bodies[18].Faces[6],
                    GetRootPart().Bodies[12].Faces[4],
                    GetRootPart().Bodies[0].Faces[4]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[21].Faces[4],
                    GetRootPart().Bodies[9].Faces[4],
                    GetRootPart().Bodies[3].Faces[3],
                    GetRootPart().Bodies[15].Faces[3]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Displacement")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[3],
                    GetRootPart().Bodies[12].Edges[4]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_To_Head_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[7],
                    GetRootPart().Bodies[12].Edges[8]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[12].Edges[0],
                    GetRootPart().Bodies[0].Edges[0]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[10],
                    GetRootPart().Bodies[12].Edges[9]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Neck_Thk_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[6],
                    GetRootPart().Bodies[12].Edges[5]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Neck_To_Hub_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[1].Edges[1],
                    GetRootPart().Bodies[13].Edges[2]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
                # EndBlock


                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[6].Edges[30],
                    GetRootPart().Bodies[18].Edges[30],
                    GetRootPart().Bodies[12].Edges[28],
                    GetRootPart().Bodies[0].Edges[28]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[12].Faces[0],
                    GetRootPart().Bodies[12].Faces[1]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[20].Edges[11],
                    GetRootPart().Bodies[8].Edges[11],
                    GetRootPart().Bodies[2].Edges[10],
                    GetRootPart().Bodies[14].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_Trans_To_Head_Circum_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[8],
                    GetRootPart().Bodies[7].Edges[8],
                    GetRootPart().Bodies[1].Edges[9],
                    GetRootPart().Bodies[13].Edges[9]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Trans_Circum_Edge_Sizing")
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[3].Edges[11],
                    GetRootPart().Bodies[9].Edges[10],
                    GetRootPart().Bodies[21].Edges[10],
                    GetRootPart().Bodies[15].Edges[11]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
                # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[12],
                GetRootPart().Bodies[18],
                GetRootPart().Bodies[6],
                GetRootPart().Bodies[0]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[17],
                GetRootPart().Bodies[23],
                GetRootPart().Bodies[11],
                GetRootPart().Bodies[5]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[14],
                GetRootPart().Bodies[20],
                GetRootPart().Bodies[8],
                GetRootPart().Bodies[2]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[13],
                GetRootPart().Bodies[1],
                GetRootPart().Bodies[7],
                GetRootPart().Bodies[19]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shell_Taper_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[22],
                GetRootPart().Bodies[10],
                GetRootPart().Bodies[4],
                GetRootPart().Bodies[16]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_1")
            # EndBlock


            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[3],
                GetRootPart().Bodies[15],
                GetRootPart().Bodies[21],
                GetRootPart().Bodies[9]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[12])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[17])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Transition_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[14])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[13])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shell_Junction_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[16])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[15])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[0],
                GetRootPart().Bodies[6],
                GetRootPart().Bodies[18]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[5],
                GetRootPart().Bodies[11],
                GetRootPart().Bodies[23]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Trasition_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[2],
                GetRootPart().Bodies[8],
                GetRootPart().Bodies[20]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[1],
                GetRootPart().Bodies[7],
                GetRootPart().Bodies[19]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shel_Junction_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[4],
                GetRootPart().Bodies[10],
                GetRootPart().Bodies[22]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_1_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[3],
                GetRootPart().Bodies[9],
                GetRootPart().Bodies[21]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_2_2")
            # EndBlock    
            


    else:

        if(nozzle_t ==2):
            shell_id = float(Parameters.Shell_BMID)
            shell_th = float(Parameters.Shell_Thk)
            head_ir = float(Parameters.Head_BMIR)
            head_th = float(Parameters.Head_Thk)
            manway_top = float(Parameters.Nozzle_Projection_from_TL)
            bm_id = float(Parameters.Nozzle_BMID)
            neck_od = float(Parameters.Neck_OD)
            hub_od = float(Parameters.Hub_OD)
            hub_hg = float(Parameters.Hub_Min_Height)
            angle = DEG(Parameters.Hub_to_Neck_Angle)
            lip_od = float(Parameters.Lip_OD)
            flange_th = float(Parameters.Flange_Thk)
            bcd = float(Parameters.BCD)
            stud_d = float(Parameters.Bolt_Hole_Dia)
            dist = float(Parameters.Total_Nozzle_Height)
            weld_ol = Parameters.Weld_Overlay_on_Flange_Face
            hub_lower_inner_fil = Parameters.Nozzle_Head_Inside_Fillet
            hub_lower_fil = Parameters.Nozzle_Head_Outside_Fillet
            
            # Set Sketch Plane
            selection = Plane.PlaneXY
            result = ViewHelper.SetSketchPlane(selection, None)
            # EndBlock

            result = SketchCircle.Create(Point2D.Create(IN(0), IN(0)), IN(head_ir))


            # Set New Sketch
            result = SketchHelper.StartConstraintSketching()
            # EndBlock

            # Offset Sketch Curve
            result = SketchOffsetCurve.Create(Selection.Create(GetRootPart().DatumPlanes[0].Curves[0]), IN(-head_th))
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(bm_id*0.5), IN(0))
            end = Point2D.Create(IN(bm_id*0.5), IN(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(bm_id*0.5), IN(manway_top-weld_ol-flange_th))
            end = Point2D.Create(IN(neck_od*0.5), IN(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock


            # Sketch Line
            start = Point2D.Create(IN(hub_od*0.5), IN((head_ir+head_th)*sin(acos(hub_od*0.5/(head_ir+head_th)))))
            end = Point2D.Create(IN(hub_od*0.5), IN((head_ir+head_th) + hub_hg))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(neck_od*0.5), IN(((hub_od*0.5-neck_od*0.5)/cos(angle))*sin(angle) + (head_ir+head_th) + hub_hg))
            end = Point2D.Create(IN(hub_od*0.5), IN((head_ir+head_th) + hub_hg))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(neck_od*0.5), IN(((hub_od*0.5-neck_od*0.5)/cos(angle))*sin(angle) + (head_ir+head_th) + hub_hg))
            end = Point2D.Create(IN(neck_od*0.5), IN(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Create Line
            SketchLine.Create(Point2D.Create(IN(head_ir*(cos(asin((manway_top - weld_ol - flange_th-dist)/head_ir)))), IN(manway_top - weld_ol - flange_th-dist)), Point2D.Create(IN(bm_id/2), IN(manway_top - weld_ol - flange_th-dist)))
            # EndBlock


            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
            end = Point2D.Create(IN((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            end = Point2D.Create(IN((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            end = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(IN(shell_id*0.5), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock



            #Split---------------------------------------------------------------------

            # Sketch Line
            #1/3.0 of difference b/w hub od and shell id + hub od, radial split, tan(theta) = y/x.
            start = Point2D.Create(IN((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5),IN(head_ir*sin(acos(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir))))
            end = Point2D.Create(IN((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5 + head_th*(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir)),IN((head_ir+head_th)*sin(acos(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock

            #Revolution-------------------------------------------------


            # Solidify Sketch
            mode = InteractionMode.Solid
            result = ViewHelper.SetViewMode(mode, None)
            # EndBlock


            # Revolve 3 Faces
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[1],
                GetRootPart().Bodies[0].Faces[7],
                GetRootPart().Bodies[0].Faces[6]])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.Add
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Revolve 1 Face
            selection = FaceSelection.Create(GetRootPart().Bodies[0].Faces[5])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.ForceIndependent
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Revolve 3 Faces
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[7],
                GetRootPart().Bodies[0].Faces[6],
                GetRootPart().Bodies[0].Faces[1]])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.ForceIndependent
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Revolve 3 Faces
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[2],
                GetRootPart().Bodies[0].Faces[1],
                GetRootPart().Bodies[0].Faces[0]])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.ForceIndependent
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Delete Selection
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[1],
                GetRootPart().Bodies[0].Faces[0]])
            result = Delete.Execute(selection)
            # EndBlock

            # Set Sketch Plane
            selection = Plane.PlaneXY
            result = ViewHelper.SetSketchPlane(selection, None)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(0), IN(0))
            end = Point2D.Create(IN(100*lip_od*0.5/head_ir), IN(100*sin(acos(lip_od*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock


            # Sketch Line
            start = Point2D.Create(IN(0), IN(-5/3*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(IN(100), IN(-5/3*((shell_id+shell_th)*0.5*shell_th)**0.5))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Solidify Sketch
            mode = InteractionMode.Solid
            result = ViewHelper.SetViewMode(mode, None)
            # EndBlock

            if(hub_od == neck_od):
                
                # Sketch Point
                SketchPoint.Create(Point2D.Create(IN((bcd-stud_d)/2), IN(manway_top-weld_ol-flange_th)))
                # EndBlock

                # Sketch Point
                SketchPoint.Create(Point2D.Create(IN((bcd+stud_d)/2), IN(manway_top-weld_ol-flange_th)))
                # EndBlock
                
                 # Sweep Point
                selection = Selection.Create(GetRootPart().Curves[2])
                revolveAxis = Line.Create(Point.Create(IN(0), IN(2167.58), IN(0)), 
                    -Direction.DirY)
                result = RevolvePoints.Execute(selection, revolveAxis, DEG(360), None)
                # EndBlock

                # Sweep Point
                selection = Selection.Create(GetRootPart().Curves[3])
                revolveAxis = Line.Create(Point.Create(IN(0), IN(2167.58), IN(0)), 
                    -Direction.DirY)
                result = RevolvePoints.Execute(selection, revolveAxis, DEG(360), None)
                # EndBlock
                
                # Split Faces
                options = SplitFaceOptions()
                selection = FaceSelection.Create(GetRootPart().Bodies[0].Faces[0])
                cutter = Selection.Create(GetRootPart().Curves[4])
                result = SplitFace.ByCutter(selection, cutter, options)
                # EndBlock

                # Split Faces
                options = SplitFaceOptions()
                selection = FaceSelection.Create(GetRootPart().Bodies[0].Faces[7])
                cutter = Selection.Create(GetRootPart().Curves[5])
                result = SplitFace.ByCutter(selection, cutter, options)
                # EndBlock
                
                # Revolve 1 Sketch Curve
                selection = Selection.Create(GetRootPart().Curves[0])
                result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
                    -Direction.DirY), DEG(360), False, ExtrudeType.None)
                # EndBlock

                # Revolve 1 Sketch Curve
                selection = Selection.Create(GetRootPart().Curves[0])
                result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
                    -Direction.DirY), DEG(360), False, ExtrudeType.None)
                # EndBlock

                # Delete Objects
                selection = Selection.Create(GetRootPart().GetChildren[IDocObject]()[-1])
                result = Delete.Execute(selection)
                # EndBlock

                # Slice Body by Faces
                selection = BodySelection.Create(GetRootPart().Bodies[0])
                toolFaces = FaceSelection.Create(GetRootPart().Bodies[4].Faces[0])
                result = SplitBody.ByCutter(selection, toolFaces, True)
                # EndBlock


                # Slice Body by Faces
                selection = BodySelection.Create(GetRootPart().Bodies[3])
                toolFaces = FaceSelection.Create(GetRootPart().Bodies[5].Faces[0])
                result = SplitBody.ByCutter(selection, toolFaces, True)
                # EndBlock

                # Delete Selection
                selection = Selection.Create([GetRootPart().GetChildren[IDocObject]()[-1],
                    GetRootPart().Bodies[5],
                    GetRootPart().Bodies[4]])
                result = Delete.Execute(selection)
                # EndBlock

                # Delete Objects
                selection = Selection.Create(GetRootPart().GetChildren[IDocObject]()[-1])
                result = Delete.Execute(selection)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[0].Edges[2])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, IN(hub_lower_fil), options, None)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[0].Edges[3])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, IN(hub_lower_inner_fil), options, None)
                # EndBlock



                #Vertical Split-------------------------------------

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneXY
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneYZ
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                # Delete Selection
                selection = Selection.Create(GetRootPart().GetChildren[IDocObject]()[-1])
                result = Delete.Execute(selection)
                # EndBlock

                # Delete Selection
                selection = Selection.Create(GetRootPart().GetChildren[IDocObject]()[-1])
                result = Delete.Execute(selection)
                # EndBlock

                #Named Selection-----------------------------------------------------------
            
                    
                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[7].Faces[3],
                    GetRootPart().Bodies[8].Faces[4],
                    GetRootPart().Bodies[9].Faces[2],
                    GetRootPart().Bodies[11].Faces[2],
                    GetRootPart().Bodies[5].Faces[2],
                    GetRootPart().Bodies[3].Faces[2],
                    GetRootPart().Bodies[2].Faces[3],
                    GetRootPart().Bodies[1].Faces[4],
                    GetRootPart().Bodies[4].Faces[4],
                    GetRootPart().Bodies[10].Faces[5],
                    GetRootPart().Bodies[6].Faces[6],
                    GetRootPart().Bodies[6].Faces[4],
                    GetRootPart().Bodies[0].Faces[2],
                    GetRootPart().Bodies[0].Faces[4],
                    GetRootPart().Bodies[0].Faces[6],
                    GetRootPart().Bodies[6].Faces[2],
                    GetRootPart().Bodies[6].Faces[3],
                    GetRootPart().Bodies[0].Faces[8],
                    GetRootPart().Bodies[18].Faces[3],
                    GetRootPart().Bodies[18].Faces[2],
                    GetRootPart().Bodies[18].Faces[4],
                    GetRootPart().Bodies[18].Faces[6],
                    GetRootPart().Bodies[22].Faces[5],
                    GetRootPart().Bodies[19].Faces[3],
                    GetRootPart().Bodies[20].Faces[4],
                    GetRootPart().Bodies[21].Faces[2],
                    GetRootPart().Bodies[23].Faces[2],
                    GetRootPart().Bodies[17].Faces[2],
                    GetRootPart().Bodies[15].Faces[2],
                    GetRootPart().Bodies[14].Faces[3],
                    GetRootPart().Bodies[13].Faces[4],
                    GetRootPart().Bodies[16].Faces[4],
                    GetRootPart().Bodies[12].Faces[2],
                    GetRootPart().Bodies[12].Faces[4],
                    GetRootPart().Bodies[12].Faces[6],
                    GetRootPart().Bodies[12].Faces[8]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Internal Pressue Surface")
                # EndBlock

               # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[18].Faces[7],
                    GetRootPart().Bodies[12].Faces[12],
                    GetRootPart().Bodies[0].Faces[12],
                    GetRootPart().Bodies[6].Faces[7]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[11].Faces[5],
                    GetRootPart().Bodies[5].Faces[3],
                    GetRootPart().Bodies[17].Faces[3],
                    GetRootPart().Bodies[23].Faces[5]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Displacement")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[3],
                    GetRootPart().Bodies[12].Edges[4]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_To_Head_Edge_Sizing")
                # EndBlock


                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[9],
                    GetRootPart().Bodies[12].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[12].Edges[0],
                    GetRootPart().Bodies[0].Edges[0]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[8],
                    GetRootPart().Bodies[0].Edges[6],
                    GetRootPart().Bodies[0].Edges[4],
                    GetRootPart().Bodies[12].Edges[7],
                    GetRootPart().Bodies[12].Edges[5],
                    GetRootPart().Bodies[12].Edges[3]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Hub_Thk_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[1].Edges[1],
                    GetRootPart().Bodies[13].Edges[2]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[12].Faces[0],
                    GetRootPart().Bodies[12].Faces[1]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[6].Edges[29],
                    GetRootPart().Bodies[0].Edges[24],
                    GetRootPart().Bodies[18].Edges[29],
                    GetRootPart().Bodies[12].Edges[24]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[21].Edges[11],
                    GetRootPart().Bodies[9].Edges[11],
                    GetRootPart().Bodies[3].Edges[10],
                    GetRootPart().Bodies[15].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
                # EndBlock
                
                                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[7].Edges[11],
                    GetRootPart().Bodies[19].Edges[11],
                    GetRootPart().Bodies[1].Edges[10],
                    GetRootPart().Bodies[13].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_Trans_To_Head_Circum_Edge_Sizing")
                # EndBlock


                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[9],
                    GetRootPart().Bodies[7].Edges[9],
                    GetRootPart().Bodies[1].Edges[8],
                    GetRootPart().Bodies[13].Edges[8]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Trans_Circum_Edge_Sizing")
                # EndBlock

            else:
                
                # Revolve 1 Sketch Curve
                selection = Selection.Create(GetRootPart().Curves[0])
                result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(-1727.03136378403), IN(0)), 
                    -Direction.DirY), DEG(360), False, ExtrudeType.None)
                # EndBlock

                # Revolve 1 Sketch Curve
                selection = Selection.Create(GetRootPart().Curves[0])
                result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(-1727.03136378403), IN(0)), 
                    -Direction.DirY), DEG(360), False, ExtrudeType.None)
                # EndBlock

                # Slice Body by Faces
                selection = BodySelection.Create(GetRootPart().Bodies[0])
                toolFaces = FaceSelection.Create(GetRootPart().Bodies[4].Faces[0])
                result = SplitBody.ByCutter(selection, toolFaces, True)
                # EndBlock

                # Slice Body by Faces
                selection = BodySelection.Create(GetRootPart().Bodies[3])
                toolFaces = FaceSelection.Create(GetRootPart().Bodies[5].Faces[0])
                result = SplitBody.ByCutter(selection, toolFaces, True)
                # EndBlock
                
                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[0].Edges[4])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, IN(hub_lower_fil), options, None)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[0].Edges[5])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, IN(hub_lower_inner_fil), options, None)
                # EndBlock

                # Delete Objects
                selection = Selection.Create([GetRootPart().Bodies[4],
                    GetRootPart().Bodies[5],
                    GetRootPart().GetChildren[IDocObject]()[-1]])
                result = Delete.Execute(selection)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneXY
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneYZ
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[11].Faces[2],
                    GetRootPart().Bodies[9].Faces[2],
                    GetRootPart().Bodies[7].Faces[3],
                    GetRootPart().Bodies[10].Faces[5],
                    GetRootPart().Bodies[8].Faces[4],
                    GetRootPart().Bodies[5].Faces[2],
                    GetRootPart().Bodies[3].Faces[2],
                    GetRootPart().Bodies[2].Faces[3],
                    GetRootPart().Bodies[1].Faces[4],
                    GetRootPart().Bodies[19].Faces[3],
                    GetRootPart().Bodies[20].Faces[4],
                    GetRootPart().Bodies[21].Faces[2],
                    GetRootPart().Bodies[23].Faces[2],
                    GetRootPart().Bodies[22].Faces[5],
                    GetRootPart().Bodies[4].Faces[4],
                    GetRootPart().Bodies[0].Faces[4],
                    GetRootPart().Bodies[6].Faces[4],
                    GetRootPart().Bodies[18].Faces[4],
                    GetRootPart().Bodies[18].Faces[6],
                    GetRootPart().Bodies[6].Faces[6],
                    GetRootPart().Bodies[0].Faces[2],
                    GetRootPart().Bodies[12].Faces[4],
                    GetRootPart().Bodies[12].Faces[2],
                    GetRootPart().Bodies[16].Faces[4],
                    GetRootPart().Bodies[13].Faces[4],
                    GetRootPart().Bodies[14].Faces[3],
                    GetRootPart().Bodies[15].Faces[2],
                    GetRootPart().Bodies[17].Faces[2],
                    GetRootPart().Bodies[12].Faces[6],
                    GetRootPart().Bodies[12].Faces[8],
                    GetRootPart().Bodies[18].Faces[2],
                    GetRootPart().Bodies[18].Faces[3],
                    GetRootPart().Bodies[6].Faces[2],
                    GetRootPart().Bodies[6].Faces[3],
                    GetRootPart().Bodies[0].Faces[6],
                    GetRootPart().Bodies[0].Faces[8]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Internal Pressue Surface")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[18].Faces[5],
                    GetRootPart().Bodies[6].Faces[5],
                    GetRootPart().Bodies[0].Faces[10],
                    GetRootPart().Bodies[12].Faces[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[23].Faces[5],
                    GetRootPart().Bodies[17].Faces[3],
                    GetRootPart().Bodies[5].Faces[3],
                    GetRootPart().Bodies[11].Faces[5]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Displacement")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[12].Edges[4],
                    GetRootPart().Bodies[0].Edges[3]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_To_Head_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[9],
                    GetRootPart().Bodies[12].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[12].Edges[0],
                    GetRootPart().Bodies[0].Edges[0]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[8],
                    GetRootPart().Bodies[12].Edges[7]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Neck_Thk_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[1].Edges[1],
                    GetRootPart().Bodies[13].Edges[2]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[12].Faces[0],
                    GetRootPart().Bodies[12].Faces[1]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[10].Edges[9],
                    GetRootPart().Bodies[22].Edges[9],
                    GetRootPart().Bodies[4].Edges[8],
                    GetRootPart().Bodies[12].Edges[24]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[9].Edges[11],
                    GetRootPart().Bodies[21].Edges[11],
                    GetRootPart().Bodies[3].Edges[10],
                    GetRootPart().Bodies[15].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[11],
                    GetRootPart().Bodies[7].Edges[11],
                    GetRootPart().Bodies[1].Edges[10],
                    GetRootPart().Bodies[13].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_Trans_To_Head_Circum_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[9],
                    GetRootPart().Bodies[7].Edges[9],
                    GetRootPart().Bodies[1].Edges[8],
                    GetRootPart().Bodies[13].Edges[8]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Trans_Circum_Edge_Sizing")
                # EndBlock
                
                # Create 4 Rounds
                selection = EdgeSelection.Create([GetRootPart().Bodies[6].Edges[28],
                    GetRootPart().Bodies[18].Edges[28],
                    GetRootPart().Bodies[0].Edges[32],
                    GetRootPart().Bodies[12].Edges[32]])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, IN(Hub_Neck_Fillet), options, None)
                # EndBlock

            
            
            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[12],
                GetRootPart().Bodies[0],
                GetRootPart().Bodies[6],
                GetRootPart().Bodies[18]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock
        
            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[10],
                GetRootPart().Bodies[22],
                GetRootPart().Bodies[4],
                GetRootPart().Bodies[16]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Body_Sizing")
            # EndBlock



            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[7],
                GetRootPart().Bodies[1],
                GetRootPart().Bodies[19],
                GetRootPart().Bodies[13]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[20],
                GetRootPart().Bodies[8],
                GetRootPart().Bodies[14],
                GetRootPart().Bodies[2]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shell_Taper_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[21],
                GetRootPart().Bodies[9],
                GetRootPart().Bodies[3],
                GetRootPart().Bodies[15]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_1")
            # EndBlock



            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[17],
                GetRootPart().Bodies[23],
                GetRootPart().Bodies[11],
                GetRootPart().Bodies[5]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[12])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[16])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Transition_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[13])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[14])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shell_Junction_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[15])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # 
            result = NamedSelection.Rename("Group1", "Shell_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[17])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # 
            result = NamedSelection.Rename("Group1", "Shell_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[6],
                GetRootPart().Bodies[0],
                GetRootPart().Bodies[18]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[4],
                GetRootPart().Bodies[10],
                GetRootPart().Bodies[22]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Trasition_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create([GetRootPart().Bodies[1],
                GetRootPart().Bodies[7],
                GetRootPart().Bodies[19]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[2],
                GetRootPart().Bodies[8],
                GetRootPart().Bodies[20]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shel_Junction_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[3],
                GetRootPart().Bodies[9],
                GetRootPart().Bodies[21]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_1_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[11],
                GetRootPart().Bodies[23],
                GetRootPart().Bodies[5]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_2_2")
            # EndBlock

        else:
            shell_id = float(Parameters.Shell_BMID)
            shell_th = float(Parameters.Shell_Thk)
            head_ir = float(Parameters.Head_BMIR)
            head_th = float(Parameters.Head_Thk)
            manway_top = float(Parameters.Nozzle_Projection_from_TL)
            bm_id = float(Parameters.Nozzle_BMID)
            neck_od = float(Parameters.Neck_OD)
            hub_od = float(Parameters.Hub_OD)
            hub_hg = float(Parameters.Hub_Min_Height)
            angle = DEG(Parameters.Hub_to_Neck_Angle)
            lip_od = float(Parameters.Lip_OD)
            flange_th = float(Parameters.Flange_Thk)
            bcd = float(Parameters.BCD)
            stud_d = float(Parameters.Bolt_Hole_Dia)
            dist = float(Parameters.Total_Nozzle_Height)
            weld_ol = Parameters.Weld_Overlay_on_Flange_Face
            hub_lower_inner_fil = Parameters.Nozzle_Head_Inside_Fillet
            hub_lower_fil = Parameters.Nozzle_Head_Outside_Fillet
            Hub_Neck_Fillet = Parameters.Hub_Neck_Fillet

            # Set Sketch Plane
            selection = Plane.PlaneXY
            result = ViewHelper.SetSketchPlane(selection, None)
            # EndBlock

            result = SketchCircle.Create(Point2D.Create(IN(0), IN(0)), IN(head_ir))


            # Set New Sketch
            result = SketchHelper.StartConstraintSketching()
            # EndBlock
            
            # Offset Sketch Curve
            result = SketchOffsetCurve.Create(Selection.Create(GetRootPart().DatumPlanes[0].Curves[0]), IN(-head_th))
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(bm_id*0.5), IN(0))
            end = Point2D.Create(IN(bm_id*0.5), IN(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(bm_id*0.5), IN(manway_top-weld_ol-flange_th))
            end = Point2D.Create(IN(neck_od*0.5), IN(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock


            # Sketch Line
            start = Point2D.Create(IN(hub_od*0.5), IN((head_ir+head_th)*sin(acos(hub_od*0.5/(head_ir+head_th)))))
            end = Point2D.Create(IN(hub_od*0.5), IN((head_ir+head_th) + hub_hg))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(neck_od*0.5), IN(((hub_od*0.5-neck_od*0.5)/cos(angle))*sin(angle) + (head_ir+head_th) + hub_hg))
            end = Point2D.Create(IN(hub_od*0.5), IN((head_ir+head_th) + hub_hg))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(neck_od*0.5), IN(((hub_od*0.5-neck_od*0.5)/cos(angle))*sin(angle) + (head_ir+head_th) + hub_hg))
            end = Point2D.Create(IN(neck_od*0.5), IN(manway_top-weld_ol-flange_th))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
            end = Point2D.Create(IN((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            end = Point2D.Create(IN((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            end = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(IN(shell_id*0.5), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(shell_id*0.5), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock


            #Split---------------------------------------------------------------------

            # Sketch Line
            #1/3.0 of difference b/w hub od and shell id + hub od, radial split, tan(theta) = y/x.
            start = Point2D.Create(IN((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5),IN(head_ir*sin(acos(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir))))
            end = Point2D.Create(IN((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5 + head_th*(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir)),IN((head_ir+head_th)*sin(acos(((shell_id*0.5-hub_od*0.5)/3.0+hub_od*0.5)/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock
            
        

            #Revolve-------------------------------------------------------------------

            # Solidify Sketch
            mode = InteractionMode.Solid
            # EndBlock


            # Set Sketch Plane
            selection = Plane.PlaneXY
            result = ViewHelper.SetSketchPlane(selection, None)
            # EndBlock

            # Sketch Line
            start = Point2D.Create(IN(0), IN(0))
            end = Point2D.Create(IN(100*lip_od*0.5/head_ir), IN(100*sin(acos(lip_od*0.5/head_ir))))
            result = SketchLine.Create(start, end)
            # EndBlock


            # Sketch Line
            start = Point2D.Create(IN(0), IN(-5/3*((shell_id+shell_th)*0.5*shell_th)**0.5))
            end = Point2D.Create(IN(100), IN(-5/3*((shell_id+shell_th)*0.5*shell_th)**0.5))
            result = SketchLine.Create(start, end)
            # EndBlock

            # Solidify Sketch
            mode = InteractionMode.Solid
            result = ViewHelper.SetViewMode(mode, None)
            # EndBlock

            # Revolve 5 Faces
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[1],
                GetRootPart().Bodies[0].Faces[6],
                GetRootPart().Bodies[0].Faces[10],
                GetRootPart().Bodies[0].Faces[9],
                GetRootPart().Bodies[0].Faces[2]])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.ForceIndependent
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Revolve 4 Faces
            selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[4],
                GetRootPart().Bodies[0].Faces[2],
                GetRootPart().Bodies[0].Faces[1],
                GetRootPart().Bodies[0].Faces[0]])
            axisSelection = Selection.Create(GetRootPart().CoordinateSystems[0].Axes[1])
            axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
            options = RevolveFaceOptions()
            options.ExtrudeType = ExtrudeType.ForceIndependent
            result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
            # EndBlock

            # Revolve 2 Sketch Curves
            selection = Selection.Create([GetRootPart().Curves[0],
                GetRootPart().Curves[1]])
            result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
                Direction.DirY), DEG(360), False, ExtrudeType.ForceIndependent)
            # EndBlock

            # Slice Body by Faces
            selection = BodySelection.Create(GetRootPart().Bodies[4])
            toolFaces = FaceSelection.Create(GetRootPart().Bodies[6].Faces[0])
            result = SplitBody.ByCutter(selection, toolFaces, True)
            # EndBlock

            # Slice Body by Faces
            selection = BodySelection.Create(GetRootPart().Bodies[1])
            toolFaces = FaceSelection.Create(GetRootPart().Bodies[5].Faces[0])
            result = SplitBody.ByCutter(selection, toolFaces, True)
            # EndBlock

            #Named Selection----------------------------------------------------------------
            
            if(neck_od == hub_od):
                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[1].Edges[2])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, IN(hub_lower_fil), options, None)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[1].Edges[2])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, IN(hub_lower_inner_fil), options, None)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneXY
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneYZ
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                
                # Delete Objects
                selection = Selection.Create([GetRootPart().Bodies[0],
                    GetRootPart().Bodies[5],
                    GetRootPart().Bodies[6],
                    GetRootPart().Bodies[13],
                    GetRootPart().Bodies[14],
                    GetRootPart().Bodies[17],
                    GetRootPart().Bodies[22],
                    GetRootPart().Bodies[23],
                    GetRootPart().Bodies[30],
                    GetRootPart().Bodies[31],
                    GetRootPart().GetChildren[IDocObject]()[-1]])
                result = Delete.Execute(selection)
                # EndBlock
                
                      
                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[12].Faces[9],
                    GetRootPart().Bodies[12].Faces[6],
                    GetRootPart().Bodies[12].Faces[4],
                    GetRootPart().Bodies[6].Faces[2],
                    GetRootPart().Bodies[0].Faces[4],
                    GetRootPart().Bodies[0].Faces[9],
                    GetRootPart().Bodies[6].Faces[5],
                    GetRootPart().Bodies[6].Faces[3],
                    GetRootPart().Bodies[0].Faces[6],
                    GetRootPart().Bodies[18].Faces[5],
                    GetRootPart().Bodies[18].Faces[3],
                    GetRootPart().Bodies[18].Faces[2],
                    GetRootPart().Bodies[11].Faces[5],
                    GetRootPart().Bodies[5].Faces[4],
                    GetRootPart().Bodies[17].Faces[4],
                    GetRootPart().Bodies[23].Faces[5],
                    GetRootPart().Bodies[8].Faces[3],
                    GetRootPart().Bodies[2].Faces[4],
                    GetRootPart().Bodies[14].Faces[4],
                    GetRootPart().Bodies[20].Faces[3],
                    GetRootPart().Bodies[1].Faces[3],
                    GetRootPart().Bodies[7].Faces[4],
                    GetRootPart().Bodies[10].Faces[2],
                    GetRootPart().Bodies[4].Faces[2],
                    GetRootPart().Bodies[3].Faces[2],
                    GetRootPart().Bodies[9].Faces[2],
                    GetRootPart().Bodies[13].Faces[3],
                    GetRootPart().Bodies[19].Faces[4],
                    GetRootPart().Bodies[22].Faces[2],
                    GetRootPart().Bodies[16].Faces[2],
                    GetRootPart().Bodies[15].Faces[2],
                    GetRootPart().Bodies[21].Faces[2]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Internal Pressure Surface")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[9].Faces[4],
                    GetRootPart().Bodies[3].Faces[3],
                    GetRootPart().Bodies[15].Faces[3],
                    GetRootPart().Bodies[21].Faces[4]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell Displacement")
                # EndBlock


                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[3],
                    GetRootPart().Bodies[12].Edges[4]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_To_Head_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[7],
                    GetRootPart().Bodies[12].Edges[7]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[12].Edges[0],
                    GetRootPart().Bodies[0].Edges[0]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[4],
                    GetRootPart().Bodies[12].Edges[3]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Hub_Thk_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[18].Edges[19],
                    GetRootPart().Bodies[12].Edges[16],
                    GetRootPart().Bodies[6].Edges[19],
                    GetRootPart().Bodies[0].Edges[16]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[12].Faces[0],
                    GetRootPart().Bodies[12].Faces[1]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
                # EndBlock
            
                
                
                # Set Sketch Plane
                selection = Plane.PlaneXY
                result = ViewHelper.SetSketchPlane(selection, None)
                # EndBlock

                # Set New Sketch
                result = SketchHelper.StartConstraintSketching()
                # EndBlock
                
                 # Sketch Point
                point = Point2D.Create(IN((bcd-stud_d)*0.5), IN(manway_top-weld_ol-flange_th))
                result = SketchPoint.Create(point)
                # EndBlock
                
                # Sketch Point
                point = Point2D.Create(IN((bcd+stud_d)*0.5), IN(manway_top-weld_ol-flange_th))
                result = SketchPoint.Create(point)
                # EndBlock

                # Solidify Sketch
                mode = InteractionMode.Solid
                result = ViewHelper.SetViewMode(mode, None)
                # EndBlock

                
                # Sweep Point
                selection = Selection.Create(GetRootPart().Curves[0])
                revolveAxis = Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
                    Direction.DirY)
                result = RevolvePoints.Execute(selection, revolveAxis, DEG(360), None)
                # EndBlock

                # Sweep Point
                selection = Selection.Create(GetRootPart().Curves[2])
                revolveAxis = Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
                    Direction.DirY)
                result = RevolvePoints.Execute(selection, revolveAxis, DEG(360), None)
                # EndBlock

                # Split Faces
                options = SplitFaceOptions()
                selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[8],
                    GetRootPart().Bodies[6].Faces[7],
                    GetRootPart().Bodies[18].Faces[7],
                    GetRootPart().Bodies[12].Faces[8]])
                cutter = Selection.Create(GetRootPart().Curves[0])
                result = SplitFace.ByCutter(selection, cutter, options)
                # EndBlock

                # Split Faces
                options = SplitFaceOptions()
                selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[10],
                    GetRootPart().Bodies[6].Faces[10],
                    GetRootPart().Bodies[18].Faces[10],
                    GetRootPart().Bodies[12].Faces[10]])
                cutter = Selection.Create(GetRootPart().Curves[1])
                result = SplitFace.ByCutter(selection, cutter, options)
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[18].Faces[10],
                    GetRootPart().Bodies[6].Faces[10],
                    GetRootPart().Bodies[0].Faces[10],
                    GetRootPart().Bodies[12].Faces[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[8].Edges[11],
                    GetRootPart().Bodies[20].Edges[11],
                    GetRootPart().Bodies[14].Edges[10],
                    GetRootPart().Bodies[2].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_Trans_To_Head_Circum_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[7].Edges[8],
                    GetRootPart().Bodies[19].Edges[8],
                    GetRootPart().Bodies[13].Edges[9],
                    GetRootPart().Bodies[1].Edges[9]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Trans_Circum_Edge_Sizing")
                # EndBlock
                
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[15].Edges[11],
                    GetRootPart().Bodies[21].Edges[10],
                    GetRootPart().Bodies[9].Edges[10],
                    GetRootPart().Bodies[3].Edges[11]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[13].Edges[2],
                    GetRootPart().Bodies[1].Edges[1]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # 
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
                # EndBlock

                
            else:
                            
                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[1].Edges[4])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, IN(hub_lower_fil), options, None)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[1].Edges[2])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, IN(Hub_Neck_Fillet), options, None)
                # EndBlock

                # Create 1 Round
                selection = EdgeSelection.Create(GetRootPart().Bodies[1].Edges[3])
                options = ConstantRoundOptions()
                result = ConstantRound.Execute(selection, IN(hub_lower_inner_fil), options, None)
                # EndBlock


                # Delete Objects
                selection = Selection.Create([GetRootPart().Bodies[0],
                    GetRootPart().Bodies[5],
                    GetRootPart().Bodies[6],
                    GetRootPart().GetChildren[IDocObject]()[-1]])
                result = Delete.Execute(selection)
                # EndBlock
                
                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneXY
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock

                # Slice Bodies by Plane
                selection = BodySelection.Create(GetRootPart().Bodies[:])
                datum = Plane.PlaneYZ
                result = SplitBody.ByCutter(selection, datum)
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[9].Faces[2],
                    GetRootPart().Bodies[21].Faces[2],
                    GetRootPart().Bodies[22].Faces[2],
                    GetRootPart().Bodies[10].Faces[2],
                    GetRootPart().Bodies[3].Faces[2],
                    GetRootPart().Bodies[4].Faces[2],
                    GetRootPart().Bodies[1].Faces[3],
                    GetRootPart().Bodies[7].Faces[4],
                    GetRootPart().Bodies[19].Faces[4],
                    GetRootPart().Bodies[20].Faces[3],
                    GetRootPart().Bodies[8].Faces[3],
                    GetRootPart().Bodies[2].Faces[4],
                    GetRootPart().Bodies[5].Faces[4],
                    GetRootPart().Bodies[11].Faces[5],
                    GetRootPart().Bodies[23].Faces[5],
                    GetRootPart().Bodies[18].Faces[11],
                    GetRootPart().Bodies[6].Faces[11],
                    GetRootPart().Bodies[0].Faces[5],
                    GetRootPart().Bodies[0].Faces[3],
                    GetRootPart().Bodies[6].Faces[10],
                    GetRootPart().Bodies[6].Faces[8],
                    GetRootPart().Bodies[0].Faces[2],
                    GetRootPart().Bodies[18].Faces[10],
                    GetRootPart().Bodies[18].Faces[8],
                    GetRootPart().Bodies[12].Faces[2],
                    GetRootPart().Bodies[12].Faces[3],
                    GetRootPart().Bodies[12].Faces[5],
                    GetRootPart().Bodies[17].Faces[4],
                    GetRootPart().Bodies[14].Faces[4],
                    GetRootPart().Bodies[13].Faces[3],
                    GetRootPart().Bodies[16].Faces[2],
                    GetRootPart().Bodies[15].Faces[2]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Internal Pressure Surface")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[6].Faces[6],
                    GetRootPart().Bodies[18].Faces[6],
                    GetRootPart().Bodies[12].Faces[4],
                    GetRootPart().Bodies[0].Faces[4]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[21].Faces[4],
                    GetRootPart().Bodies[9].Faces[4],
                    GetRootPart().Bodies[3].Faces[3],
                    GetRootPart().Bodies[15].Faces[3]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Displacement")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[3],
                    GetRootPart().Bodies[12].Edges[4]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_To_Head_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[7],
                    GetRootPart().Bodies[12].Edges[8]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[12].Edges[0],
                    GetRootPart().Bodies[0].Edges[0]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[10],
                    GetRootPart().Bodies[12].Edges[9]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Neck_Thk_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[6],
                    GetRootPart().Bodies[12].Edges[5]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Neck_To_Hub_Fillet_Edge_Size")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[1].Edges[1],
                    GetRootPart().Bodies[13].Edges[2]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
                # EndBlock


                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[6].Edges[30],
                    GetRootPart().Bodies[18].Edges[30],
                    GetRootPart().Bodies[12].Edges[28],
                    GetRootPart().Bodies[0].Edges[28]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = FaceSelection.Create([GetRootPart().Bodies[12].Faces[0],
                    GetRootPart().Bodies[12].Faces[1]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[20].Edges[11],
                    GetRootPart().Bodies[8].Edges[11],
                    GetRootPart().Bodies[2].Edges[10],
                    GetRootPart().Bodies[14].Edges[10]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_Trans_To_Head_Circum_Edge_Sizing")
                # EndBlock

                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[8],
                    GetRootPart().Bodies[7].Edges[8],
                    GetRootPart().Bodies[1].Edges[9],
                    GetRootPart().Bodies[13].Edges[9]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Head_To_Shell_Trans_Circum_Edge_Sizing")
                # EndBlock
                
                # Create Named Selection Group
                primarySelection = EdgeSelection.Create([GetRootPart().Bodies[3].Edges[11],
                    GetRootPart().Bodies[9].Edges[10],
                    GetRootPart().Bodies[21].Edges[10],
                    GetRootPart().Bodies[15].Edges[11]])
                secondarySelection = Selection.Empty()
                result = NamedSelection.Create(primarySelection, secondarySelection)
                # EndBlock

                # Rename Named Selection
                result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
                # EndBlock
                
                
            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[12],
                GetRootPart().Bodies[18],
                GetRootPart().Bodies[6],
                GetRootPart().Bodies[0]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[17],
                GetRootPart().Bodies[23],
                GetRootPart().Bodies[11],
                GetRootPart().Bodies[5]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[14],
                GetRootPart().Bodies[20],
                GetRootPart().Bodies[8],
                GetRootPart().Bodies[2]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[13],
                GetRootPart().Bodies[1],
                GetRootPart().Bodies[7],
                GetRootPart().Bodies[19]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shell_Taper_Body_Sizing")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[22],
                GetRootPart().Bodies[10],
                GetRootPart().Bodies[4],
                GetRootPart().Bodies[16]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_1")
            # EndBlock


            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[3],
                GetRootPart().Bodies[15],
                GetRootPart().Bodies[21],
                GetRootPart().Bodies[9]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[12])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[17])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Transition_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[14])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[13])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shell_Junction_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[16])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_1")
            # EndBlock

            # Create Named Selection Group
            primarySelection = BodySelection.Create(GetRootPart().Bodies[15])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[0],
                GetRootPart().Bodies[6],
                GetRootPart().Bodies[18]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Nozzle_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[5],
                GetRootPart().Bodies[11],
                GetRootPart().Bodies[23]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Trasition_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[2],
                GetRootPart().Bodies[8],
                GetRootPart().Bodies[20]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[1],
                GetRootPart().Bodies[7],
                GetRootPart().Bodies[19]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Head_To_Shel_Junction_Meshing_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[4],
                GetRootPart().Bodies[10],
                GetRootPart().Bodies[22]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_1_2")
            # EndBlock

            # Create Named Selection Group
            primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[3],
                GetRootPart().Bodies[9],
                GetRootPart().Bodies[21]])
            secondarySelection = Selection.Empty()
            result = NamedSelection.Create(primarySelection, secondarySelection)
            # EndBlock

            # Rename Named Selection
            result = NamedSelection.Rename("Group1", "Shell_Meshing_2_2")
            # EndBlock    
            
# Make Components
selection = BodySelection.Create(GetRootPart().Bodies[:])
result = ComponentHelper.MoveBodiesToComponent(selection, None)
# EndBlock


# Share Topology
options = ShareTopologyOptions()
options.Tolerance = MM(0.2)
result = ShareTopology.FindAndFix(options)
# EndBlock
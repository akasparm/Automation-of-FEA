



# Python Script, API Version = V19

while GetRootPart().Bodies.Count>0:
    GetRootPart().Bodies[0].Delete()

while GetRootPart().Curves.Count>0:
    GetRootPart().Curves[0].Delete()

while GetRootPart().DatumPlanes.Count>0:
    GetRootPart().DatumPlanes[0].Delete()

while GetRootPart().Components.Count>0:
    GetRootPart().Components[0].Delete()
    

from math import sin, cos, tan, asin, acos, atan, sqrt  #For sin and cos functions

unit = Parameters.Unit
shell_id = float(Parameters.Shell_ID)
shell_th = float(Parameters.Shell_Thk)
head_ir = float(Parameters.Head_BMIR)
head_th = float(Parameters.Head_BM_Thk)
n_angle = DEG(float(180 - Parameters.Nozzle_Angle))
nozzle_l = float(Parameters.Nozzle_Projection_TL)-float(Parameters.Nozzle_Flange_Thk)-float(Parameters.WOL_on_Flange_Face)
n_bmid = float(Parameters.Nozzle_BMID)
n_neck_od = float(Parameters.Nozzle_Neck_OD)
n_hub_od = float(Parameters.Nozzle_Hub_OD)
n_hub_hg = float(Parameters.Nozzle_Hub_min_Height)
n_taper = DEG(float(Parameters.Nozzle_Hub_To_Neck_Taper_Angle))
n_lip_od  =  float(Parameters.Nozzle_Lip_OD)
n_hub_inner_fil = float(Parameters.Nozzle_To_Head_Inside_Fillet)
n_hub_outer_fil = float(Parameters.Nozzle_To_Head_Outside_Fillet)
n_neck_fillet = float(Parameters.Nozzle_Neck_To_Hub_Fillet)
n_fillet_rad =1
n_split_offset = float(Parameters.Nozzle_Split_Offest)





if(unit == 1):

    if(n_hub_od == n_neck_od):
        
        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        result = SketchCircle.Create(Point2D.Create(MM(0), MM(0)), MM(head_ir))

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Offset Sketch Curve
        result = SketchOffsetCurve.Create(Selection.Create(GetRootPart().DatumPlanes[0].Curves[0]), MM(-head_th))
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        end = Point2D.Create(MM((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(MM((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(MM(shell_id*0.5), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(0), MM(0))
        end = Point2D.Create(MM(0), MM(head_ir+head_th))
        result = SketchLine.Create(start, end)
        # EndBlock


        #Revolution-------------------------------------------------



        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[0].Faces[5])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 3 Faces
        selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[7],
            GetRootPart().Bodies[0].Faces[6],
            GetRootPart().Bodies[0].Faces[1]])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 3 Faces
        selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[2],
            GetRootPart().Bodies[0].Faces[1],
            GetRootPart().Bodies[0].Faces[0]])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        #Nozzle-------------------------------------------------------------------

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        wp_x = (head_ir+head_th)*cos(n_angle)
        wp_y = (head_ir+head_th)*sin(n_angle)
        start = Point2D.Create(MM(0), MM(0))
        end = Point2D.Create(MM(wp_x), MM(wp_y))
        result = SketchLine.Create(start, end,True)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(nozzle_l*cos(n_angle)), MM(nozzle_l*sin(n_angle)))
        end = Point2D.Create(MM(0), MM(0))
        result = SketchLine.Create(start, end,False)
        # EndBlock

        # Offset Sketch Curve
        curvesToOffset = Selection.Create(GetRootPart().DatumPlanes[0].Curves[2])
        offsetDistance = MM(n_neck_od/2)
        result = SketchOffsetCurve.Create(curvesToOffset, offsetDistance)
        # EndBlock

        # Offset Sketch Curve
        curvesToOffset = Selection.Create(GetRootPart().DatumPlanes[0].Curves[2])
        offsetDistance = MM(n_bmid/2)
        result = SketchOffsetCurve.Create(curvesToOffset, offsetDistance)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(n_neck_od/2*cos(n_angle-DEG(90))), MM(n_neck_od/2*sin(n_angle-DEG(90))))
        end = Point2D.Create(MM(0), MM(0))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(nozzle_l*cos(n_angle)), MM(nozzle_l*sin(n_angle)))
        end = Point2D.Create(MM(nozzle_l*cos(n_angle) + (n_neck_od/2*cos(n_angle-DEG(90)))), MM(nozzle_l*sin(n_angle) + (n_neck_od/2*sin(n_angle-DEG(90)))))
        result = SketchLine.Create(start, end)
        # EndBlock

        #Nozzle Revolution---------------------------------------------------------------------

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[2].Faces[3])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.ForceCut
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[2].Faces[1])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.ForceIndependent
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[3])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[1].Faces[1])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Delete Objects
        selection = BodySelection.Create(GetRootPart().Bodies[4])
        result = Combine.RemoveRegions(selection)
        # EndBlock


        #Nozzle split------------------------------------------

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(0), MM(0))
        end = Point2D.Create(MM(head_ir*cos(n_angle) + n_lip_od/2*cos(n_angle-DEG(90))), MM(head_ir*sin(n_angle) + n_lip_od/2*sin(n_angle-DEG(90))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(0), MM(0))
        end = Point2D.Create(MM(head_ir*cos(n_angle) + (n_split_offset)*cos(n_angle-DEG(90))), MM(head_ir*sin(n_angle) + (n_split_offset)*cos(n_angle-DEG(90))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock


        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[2])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
            Direction.Create(cos(n_angle), sin(n_angle), 0)), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[2])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
            Direction.Create(cos(n_angle), sin(n_angle), 0)), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[0])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock


        # Merge Bodies
        targets = BodySelection.Create([GetRootPart().Bodies[3],
            GetRootPart().Bodies[1]])
        result = Combine.Merge(targets)
        # EndBlock

        # Create 1 Round
        selection = EdgeSelection.Create(GetRootPart().Bodies[2].Edges[3])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, MM(n_hub_outer_fil), options, None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[2])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[4].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[2])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[3].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        #Horizontal split-----------------------------------

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(0), MM(-5*((shell_id+shell_th)*0.5*shell_th)**0.5/3))
        end = Point2D.Create(MM(100), MM(-5*((shell_id+shell_th)*0.5*shell_th)**0.5/3))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(425.7791465514), MM(0)), 
            -Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[6])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[8].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock


        #Vertical Split-------------------------------------

        # Slice Bodies by Plane
        selection = BodySelection.Create(GetRootPart().Bodies[6], GetRootPart().Bodies[9])
        datum = Plane.PlaneYZ
        result = SplitBody.ByCutter(selection, datum)
        # EndBlock

        # Slice Bodies by Plane
        selection = BodySelection.Create(GetRootPart().Bodies[:])
        datum = Plane.PlaneXY
        result = SplitBody.ByCutter(selection, datum)
        # EndBlock

        #Nozzle split --------------------------------------------

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[17],
            GetRootPart().Bodies[7],
            GetRootPart().Bodies[12],
            GetRootPart().Bodies[2]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[5].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        #Horizontal split ----------------------------------------------


        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5-100), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        end = Point2D.Create(MM(0), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start =  Point2D.Create(MM(shell_id*0.5-100), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(MM(0), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[10],
            GetRootPart().Bodies[20],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[6]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[27].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[20],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[10],
            GetRootPart().Bodies[6]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[26].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock


        #Delete-------------------------------------------------

        # Delete Objects
        selection = Selection.Create([GetRootPart().Bodies[0],
            GetRootPart().Bodies[1],
            GetRootPart().Bodies[3],
            GetRootPart().Bodies[4],
            GetRootPart().Bodies[5],
            GetRootPart().Bodies[8],
            GetRootPart().Bodies[13],
            GetRootPart().Bodies[14],
            GetRootPart().Bodies[15],
            GetRootPart().Bodies[18],
            GetRootPart().Bodies[26],
            GetRootPart().Bodies[27],
            GetRootPart().GetChildren[IDocObject]()[-1]])
        result = Delete.Execute(selection)
        # EndBlock

        # Create 4 Rounds
        selection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[17],
            GetRootPart().Bodies[15].Edges[17],
            GetRootPart().Bodies[14].Edges[17],
            GetRootPart().Bodies[6].Edges[17]])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, MM(n_hub_inner_fil), options, None)
        # EndBlock

        #Named selection-----------------------------------------

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[9].Faces[2],
            GetRootPart().Bodies[18].Faces[4],
            GetRootPart().Bodies[21].Faces[2],
            GetRootPart().Bodies[7].Faces[3],
            GetRootPart().Bodies[12].Faces[4],
            GetRootPart().Bodies[14].Faces[4],
            GetRootPart().Bodies[6].Faces[4],
            GetRootPart().Bodies[8].Faces[4],
            GetRootPart().Bodies[14].Faces[9],
            GetRootPart().Bodies[14].Faces[6],
            GetRootPart().Bodies[6].Faces[6],
            GetRootPart().Bodies[6].Faces[9],
            GetRootPart().Bodies[15].Faces[4],
            GetRootPart().Bodies[0].Faces[4],
            GetRootPart().Bodies[15].Faces[9],
            GetRootPart().Bodies[0].Faces[9],
            GetRootPart().Bodies[15].Faces[6],
            GetRootPart().Bodies[0].Faces[6],
            GetRootPart().Bodies[13].Faces[5],
            GetRootPart().Bodies[2].Faces[5],
            GetRootPart().Bodies[1].Faces[3],
            GetRootPart().Bodies[23].Faces[2],
            GetRootPart().Bodies[19].Faces[4],
            GetRootPart().Bodies[3].Faces[2],
            GetRootPart().Bodies[5].Faces[2],
            GetRootPart().Bodies[16].Faces[4],
            GetRootPart().Bodies[22].Faces[2],
            GetRootPart().Bodies[4].Faces[1],
            GetRootPart().Bodies[10].Faces[1],
            GetRootPart().Bodies[20].Faces[2],
            GetRootPart().Bodies[17].Faces[4],
            GetRootPart().Bodies[11].Faces[2]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Internal Pressue Surface")
        # EndBlock

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[14].Faces[7],
            GetRootPart().Bodies[15].Faces[2],
            GetRootPart().Bodies[0].Faces[2],
            GetRootPart().Bodies[6].Faces[7]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
        # EndBlock

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[5].Faces[3],
            GetRootPart().Bodies[11].Faces[3],
            GetRootPart().Bodies[3].Faces[5],
            GetRootPart().Bodies[9].Faces[5]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Displacement")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[23],
            GetRootPart().Bodies[15].Edges[23]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[0],
            GetRootPart().Bodies[15].Edges[0]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[7],
            GetRootPart().Bodies[16].Edges[7]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[14],
            GetRootPart().Bodies[6],
            GetRootPart().Bodies[15],
            GetRootPart().Bodies[0]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Body_Sizing")
        # EndBlock


        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[12],
            GetRootPart().Bodies[8],
            GetRootPart().Bodies[2],
            GetRootPart().Bodies[13]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[15].Edges[3],
            GetRootPart().Bodies[0].Edges[4]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[7],
            GetRootPart().Bodies[10],
            GetRootPart().Bodies[4],
            GetRootPart().Bodies[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create([GetRootPart().Bodies[23],
            GetRootPart().Bodies[21],
            GetRootPart().Bodies[22],
            GetRootPart().Bodies[20]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Taper_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[18],
            GetRootPart().Bodies[19],
            GetRootPart().Bodies[17],
            GetRootPart().Bodies[16]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[5],
            GetRootPart().Bodies[18].Edges[5],
            GetRootPart().Bodies[16].Edges[5],
            GetRootPart().Bodies[17].Edges[5]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[5],
            GetRootPart().Bodies[11],
            GetRootPart().Bodies[9],
            GetRootPart().Bodies[3]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[14])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[12])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Transition_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[7],
            GetRootPart().Bodies[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[21])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Junction_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[18])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[9])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[15],
            GetRootPart().Bodies[0],
            GetRootPart().Bodies[6]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[13],
            GetRootPart().Bodies[2],
            GetRootPart().Bodies[8]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Trasition_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[4],
            GetRootPart().Bodies[10]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[23],
            GetRootPart().Bodies[20],
            GetRootPart().Bodies[22]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Junction_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[19],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[17]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_1_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[3],
            GetRootPart().Bodies[5],
            GetRootPart().Bodies[11]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_2_2")
        # EndBlock
        
        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[14].Faces[0],
            GetRootPart().Bodies[14].Faces[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[2].Edges[9],
            GetRootPart().Bodies[13].Edges[9],
            GetRootPart().Bodies[12].Edges[8],
            GetRootPart().Bodies[8].Edges[8]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # 
        result = NamedSelection.Rename("Group1", "Nozzle_head_Circumferencial_Sizing")
        # EndBlock
        
        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[7].Edges[1],
        GetRootPart().Bodies[7].Edges[2]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # 
        result = NamedSelection.Rename("Group1", "Head thk_to_Head Transition thk")
        # EndBlock

        
    else:

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        result = SketchCircle.Create(Point2D.Create(MM(0), MM(0)), MM(head_ir))

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Offset Sketch Curve
        result = SketchOffsetCurve.Create(Selection.Create(GetRootPart().DatumPlanes[0].Curves[0]), MM(-head_th))
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        end = Point2D.Create(MM((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(MM((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(MM(shell_id*0.5 + shell_th), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5 + shell_th), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(MM(shell_id*0.5), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5), MM((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(MM(shell_id*0.5), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(0), MM(0))
        end = Point2D.Create(MM(0), MM(head_ir+head_th))
        result = SketchLine.Create(start, end)
        # EndBlock


        #Revolution-------------------------------------------------



        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[0].Faces[5])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 3 Faces
        selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[7],
            GetRootPart().Bodies[0].Faces[6],
            GetRootPart().Bodies[0].Faces[1]])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 3 Faces
        selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[2],
            GetRootPart().Bodies[0].Faces[1],
            GetRootPart().Bodies[0].Faces[0]])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        #Nozzle-------------------------------------------------------------------

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        wp_x = (head_ir+head_th)*cos(n_angle)
        wp_y = (head_ir+head_th)*sin(n_angle)
        start = Point2D.Create(MM(0), MM(0))
        end = Point2D.Create(MM(wp_x), MM(wp_y))
        result = SketchLine.Create(start, end,True)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(nozzle_l*cos(n_angle)), MM(nozzle_l*sin(n_angle)))
        end = Point2D.Create(MM(0), MM(0))
        result = SketchLine.Create(start, end,False)
        # EndBlock

        # Offset Sketch Curve
        curvesToOffset = Selection.Create(GetRootPart().DatumPlanes[0].Curves[2])
        offsetDistance = MM(n_bmid/2)
        result = SketchOffsetCurve.Create(curvesToOffset, offsetDistance)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(n_hub_od*0.5*cos(n_angle-DEG(90))), MM(n_hub_od*0.5*sin(n_angle-DEG(90))))
        end = Point2D.Create(MM(0), MM(0))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(nozzle_l*cos(n_angle)), MM(nozzle_l*sin(n_angle)))
        end = Point2D.Create(MM(nozzle_l*cos(n_angle) + (n_neck_od/2*cos(n_angle-DEG(90)))), MM(nozzle_l*sin(n_angle) + (n_neck_od/2*sin(n_angle-DEG(90)))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch LineSelection.Empty()
        start = Point2D.Create(MM(wp_x +n_hub_hg*cos(n_angle)), MM(wp_y+n_hub_hg*sin(n_angle)))
        end = Point2D.Create(MM(0), MM(0))
        result = SketchLine.Create(start, end,False)
        # EndBlock

        # Offset Sketch Curve
        curvesToOffset = Selection.Create(GetRootPart().DatumPlanes[0].Curves[6])
        offsetDistance = MM(n_hub_od*0.5)
        result = SketchOffsetCurve.Create(curvesToOffset, offsetDistance)
        # EndBlock

        # Sketch Line
        l = (n_hub_od - n_neck_od)/2/cos(n_taper)
        start = Point2D.Create(MM(wp_x +n_hub_hg*cos(n_angle) + (n_hub_od/2*cos(n_angle-DEG(90))) + l*cos(n_angle + n_taper)), MM(wp_y+n_hub_hg*sin(n_angle) + (n_hub_od/2*sin(n_angle-DEG(90))) + l*sin(n_angle + n_taper)))
        end = Point2D.Create(MM(wp_x +n_hub_hg*cos(n_angle) + (n_hub_od/2*cos(n_angle-DEG(90)))), MM(wp_y+n_hub_hg*sin(n_angle) + (n_hub_od/2*sin(n_angle-DEG(90)))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(wp_x +n_hub_hg*cos(n_angle) + (n_hub_od/2*cos(n_angle-DEG(90))) + l*cos(n_angle + n_taper)), MM(wp_y+n_hub_hg*sin(n_angle) + (n_hub_od/2*sin(n_angle-DEG(90))) + l*sin(n_angle + n_taper)))
        end = Point2D.Create(MM(nozzle_l*cos(n_angle) + (n_neck_od/2*cos(n_angle-DEG(90)))), MM(nozzle_l*sin(n_angle) + (n_neck_od/2*sin(n_angle-DEG(90)))))
        result = SketchLine.Create(start, end)
        # EndBlock


        #Nozzle Revolution---------------------------------------------------------------------

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[2].Faces[3])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.ForceCut
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[2].Faces[1])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.ForceIndependent
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[3])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[1].Faces[1])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Delete Objects
        selection = BodySelection.Create(GetRootPart().Bodies[4])
        result = Combine.RemoveRegions(selection)
        # EndBlock


        #Nozzle split------------------------------------------

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(0), MM(0))
        end = Point2D.Create(MM(head_ir*cos(n_angle) + n_lip_od/2*cos(n_angle-DEG(90))), MM(head_ir*sin(n_angle) + n_lip_od/2*sin(n_angle-DEG(90))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(0), MM(0))
        end = Point2D.Create(MM(head_ir*cos(n_angle) + (n_lip_od/2 +n_split_offset)*cos(n_angle-DEG(90))), MM(head_ir*sin(n_angle) + (n_lip_od/2+n_split_offset)*cos(n_angle-DEG(90))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock


        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[2])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
            Direction.Create(cos(n_angle), sin(n_angle), 0)), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[2])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
            Direction.Create(cos(n_angle), sin(n_angle), 0)), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[0])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock


        # Merge Bodies
        targets = BodySelection.Create([GetRootPart().Bodies[3],
            GetRootPart().Bodies[1]])
        result = Combine.Merge(targets)
        # EndBlock

        # Create 1 Round
        selection = EdgeSelection.Create(GetRootPart().Bodies[2].Edges[3])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, MM(n_fillet_rad), options, None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[2])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[4].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[2])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[3].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        #Horizontal split-----------------------------------

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(0), MM(-5*((shell_id+shell_th)*0.5*shell_th)**0.5/3))
        end = Point2D.Create(MM(100), MM(-5*((shell_id+shell_th)*0.5*shell_th)**0.5/3))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(425.7791465514), MM(0)), 
            -Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[6])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[8].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock


        #Vertical Split-------------------------------------

        # Slice Bodies by Plane
        selection = BodySelection.Create(GetRootPart().Bodies[6], GetRootPart().Bodies[9])
        datum = Plane.PlaneYZ
        result = SplitBody.ByCutter(selection, datum)
        # EndBlock

        # Slice Bodies by Plane
        selection = BodySelection.Create(GetRootPart().Bodies[:])
        datum = Plane.PlaneXY
        result = SplitBody.ByCutter(selection, datum)
        # EndBlock

        #Nozzle split --------------------------------------------

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[17],
            GetRootPart().Bodies[7],
            GetRootPart().Bodies[12],
            GetRootPart().Bodies[2]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[5].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        #Horizontal split ----------------------------------------------

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(MM(shell_id*0.5-100), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        end = Point2D.Create(MM(0), MM(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start =  Point2D.Create(MM(shell_id*0.5-100), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(MM(0), MM(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(MM(0), MM(0), MM(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[10],
            GetRootPart().Bodies[20],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[6]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[27].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[20],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[10],
            GetRootPart().Bodies[6]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[26].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock


        # Delete Objects
        selection = Selection.Create([GetRootPart().Bodies[0],
            GetRootPart().Bodies[1],
            GetRootPart().Bodies[3],
            GetRootPart().Bodies[5],
            GetRootPart().Bodies[4],
            GetRootPart().Bodies[8],
            GetRootPart().Bodies[13],
            GetRootPart().Bodies[14],
            GetRootPart().Bodies[15],
            GetRootPart().Bodies[18],
            GetRootPart().Bodies[26],
            GetRootPart().Bodies[27],
            GetRootPart().GetChildren[IDocObject]()[-1]])
        result = Delete.Execute(selection)
        # EndBlock

        #Fillets-------------------------------------------------

        # Create 4 Rounds
        selection = EdgeSelection.Create([GetRootPart().Bodies[6].Edges[25],
            GetRootPart().Bodies[14].Edges[25],
            GetRootPart().Bodies[15].Edges[25],
            GetRootPart().Bodies[0].Edges[25]])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, MM(n_neck_fillet), options, None)
        # EndBlock


        # Create 4 Rounds
        selection = EdgeSelection.Create([GetRootPart().Bodies[14].Edges[22],
            GetRootPart().Bodies[15].Edges[19],
            GetRootPart().Bodies[0].Edges[19],
            GetRootPart().Bodies[6].Edges[22]])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, MM(n_hub_outer_fil), options, None)
        # EndBlock


        # Create 4 Rounds
        selection = EdgeSelection.Create([GetRootPart().Bodies[14].Edges[19],
            GetRootPart().Bodies[6].Edges[19],
            GetRootPart().Bodies[0].Edges[21],
            GetRootPart().Bodies[15].Edges[21]])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, MM(n_hub_inner_fil), options, None)
        # EndBlock

        #Named selection-----------------------------------------

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[5],
            GetRootPart().Bodies[2].Faces[5],
            GetRootPart().Bodies[13].Faces[5],
            GetRootPart().Bodies[15].Faces[5],
            GetRootPart().Bodies[14].Faces[2],
            GetRootPart().Bodies[6].Faces[2],
            GetRootPart().Bodies[8].Faces[4],
            GetRootPart().Bodies[6].Faces[13],
            GetRootPart().Bodies[0].Faces[13],
            GetRootPart().Bodies[0].Faces[7],
            GetRootPart().Bodies[6].Faces[4],
            GetRootPart().Bodies[15].Faces[13],
            GetRootPart().Bodies[15].Faces[7],
            GetRootPart().Bodies[14].Faces[4],
            GetRootPart().Bodies[14].Faces[13],
            GetRootPart().Bodies[12].Faces[4],
            GetRootPart().Bodies[7].Faces[3],
            GetRootPart().Bodies[1].Faces[3],
            GetRootPart().Bodies[10].Faces[1],
            GetRootPart().Bodies[4].Faces[1],
            GetRootPart().Bodies[21].Faces[2],
            GetRootPart().Bodies[18].Faces[4],
            GetRootPart().Bodies[9].Faces[2],
            GetRootPart().Bodies[3].Faces[2],
            GetRootPart().Bodies[19].Faces[4],
            GetRootPart().Bodies[23].Faces[2],
            GetRootPart().Bodies[22].Faces[2],
            GetRootPart().Bodies[20].Faces[2],
            GetRootPart().Bodies[16].Faces[4],
            GetRootPart().Bodies[17].Faces[4],
            GetRootPart().Bodies[5].Faces[2],
            GetRootPart().Bodies[11].Faces[2]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Internal Pressue Surface")
        # EndBlock

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[14].Faces[6],
            GetRootPart().Bodies[15].Faces[10],
            GetRootPart().Bodies[0].Faces[10],
            GetRootPart().Bodies[6].Faces[6]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
        # EndBlock

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[3].Faces[5],
            GetRootPart().Bodies[9].Faces[5],
            GetRootPart().Bodies[5].Faces[3],
            GetRootPart().Bodies[11].Faces[3]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Displacement")
        # EndBlock


        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[15].Edges[33],
            GetRootPart().Bodies[0].Edges[33]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[15].Edges[28],
            GetRootPart().Bodies[0].Edges[29],
            GetRootPart().Bodies[15].Edges[25],
            GetRootPart().Bodies[0].Edges[24]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[7],
            GetRootPart().Bodies[16].Edges[7]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[6],
            GetRootPart().Bodies[14],
            GetRootPart().Bodies[15],
            GetRootPart().Bodies[0]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Body_Sizing")
        # EndBlock


        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[12],
            GetRootPart().Bodies[8],
            GetRootPart().Bodies[13],
            GetRootPart().Bodies[2]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[1].Edges[3],
            GetRootPart().Bodies[1].Edges[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[1],
            GetRootPart().Bodies[4],
            GetRootPart().Bodies[7],
            GetRootPart().Bodies[10]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[21],
            GetRootPart().Bodies[20],
            GetRootPart().Bodies[23],
            GetRootPart().Bodies[22]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Taper_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[18],
            GetRootPart().Bodies[17],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[19]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[18].Edges[5],
            GetRootPart().Bodies[17].Edges[5],
            GetRootPart().Bodies[16].Edges[5],
            GetRootPart().Bodies[19].Edges[5]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[9],
            GetRootPart().Bodies[11],
            GetRootPart().Bodies[5],
            GetRootPart().Bodies[3]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[14])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[12])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Transition_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[7],
            GetRootPart().Bodies[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[21])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Junction_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[18])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[9])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[15],
            GetRootPart().Bodies[0],
            GetRootPart().Bodies[6]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[13],
            GetRootPart().Bodies[2],
            GetRootPart().Bodies[8]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Trasition_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[4],
            GetRootPart().Bodies[10]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[23],
            GetRootPart().Bodies[20],
            GetRootPart().Bodies[22]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shel_Junction_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[19],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[17]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_1_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[3],
            GetRootPart().Bodies[5],
            GetRootPart().Bodies[11]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_2_2")
        # EndBlock


        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[14].Faces[0],
            GetRootPart().Bodies[14].Faces[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[2].Edges[9],
            GetRootPart().Bodies[13].Edges[9],
            GetRootPart().Bodies[12].Edges[8],
            GetRootPart().Bodies[8].Edges[8]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # 
        result = NamedSelection.Rename("Group1", "Nozzle_head_Circumferencial_Sizing")
        # EndBlock
        
                # Fill
        selection = FaceSelection.Create([GetRootPart().Bodies[6].Faces[9],
        GetRootPart().Bodies[14].Faces[9],
        GetRootPart().Bodies[0].Faces[6],
        GetRootPart().Bodies[15].Faces[6]])
        secondarySelection = Selection.Empty()
        options = FillOptions()
        result = Fill.Execute(selection, secondarySelection, options, FillMode.ThreeD, None)
        # EndBlock
    
        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[7].Edges[1],
        GetRootPart().Bodies[7].Edges[2]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # 
        result = NamedSelection.Rename("Group1", "Head thk_to_Head Transition thk")
        # EndBlock

    
else:
        
    if(n_hub_od == n_neck_od):
        
        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        result = SketchCircle.Create(Point2D.Create(IN(0), IN(0)), IN(head_ir))

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Offset Sketch Curve
        result = SketchOffsetCurve.Create(Selection.Create(GetRootPart().DatumPlanes[0].Curves[0]), IN(-head_th))
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        end = Point2D.Create(IN((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(IN((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(IN(shell_id*0.5), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(0), IN(0))
        end = Point2D.Create(IN(0), IN(head_ir+head_th))
        result = SketchLine.Create(start, end)
        # EndBlock


        #Revolution-------------------------------------------------



        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[0].Faces[5])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 3 Faces
        selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[7],
            GetRootPart().Bodies[0].Faces[6],
            GetRootPart().Bodies[0].Faces[1]])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 3 Faces
        selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[2],
            GetRootPart().Bodies[0].Faces[1],
            GetRootPart().Bodies[0].Faces[0]])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        #Nozzle-------------------------------------------------------------------

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        wp_x = (head_ir+head_th)*cos(n_angle)
        wp_y = (head_ir+head_th)*sin(n_angle)
        start = Point2D.Create(IN(0), IN(0))
        end = Point2D.Create(IN(wp_x), IN(wp_y))
        result = SketchLine.Create(start, end,True)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(nozzle_l*cos(n_angle)), IN(nozzle_l*sin(n_angle)))
        end = Point2D.Create(IN(0), IN(0))
        result = SketchLine.Create(start, end,False)
        # EndBlock

        # Offset Sketch Curve
        curvesToOffset = Selection.Create(GetRootPart().DatumPlanes[0].Curves[2])
        offsetDistance = IN(n_neck_od/2)
        result = SketchOffsetCurve.Create(curvesToOffset, offsetDistance)
        # EndBlock

        # Offset Sketch Curve
        curvesToOffset = Selection.Create(GetRootPart().DatumPlanes[0].Curves[2])
        offsetDistance = IN(n_bmid/2)
        result = SketchOffsetCurve.Create(curvesToOffset, offsetDistance)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(n_neck_od/2*cos(n_angle-DEG(90))), IN(n_neck_od/2*sin(n_angle-DEG(90))))
        end = Point2D.Create(IN(0), IN(0))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(nozzle_l*cos(n_angle)), IN(nozzle_l*sin(n_angle)))
        end = Point2D.Create(IN(nozzle_l*cos(n_angle) + (n_neck_od/2*cos(n_angle-DEG(90)))), IN(nozzle_l*sin(n_angle) + (n_neck_od/2*sin(n_angle-DEG(90)))))
        result = SketchLine.Create(start, end)
        # EndBlock

        #Nozzle Revolution---------------------------------------------------------------------

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[2].Faces[3])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.ForceCut
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[2].Faces[1])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.ForceIndependent
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[3])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[1].Faces[1])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Delete Objects
        selection = BodySelection.Create(GetRootPart().Bodies[4])
        result = Combine.RemoveRegions(selection)
        # EndBlock


        #Nozzle split------------------------------------------

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(0), IN(0))
        end = Point2D.Create(IN(head_ir*cos(n_angle) + n_lip_od/2*cos(n_angle-DEG(90))), IN(head_ir*sin(n_angle) + n_lip_od/2*sin(n_angle-DEG(90))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(0), IN(0))
        end = Point2D.Create(IN(head_ir*cos(n_angle) + (n_lip_od/2 +n_split_offset)*cos(n_angle-DEG(90))), IN(head_ir*sin(n_angle) + (n_lip_od/2+n_split_offset)*cos(n_angle-DEG(90))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock


        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[2])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
            Direction.Create(cos(n_angle), sin(n_angle), 0)), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[2])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
            Direction.Create(cos(n_angle), sin(n_angle), 0)), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[0])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock


        # Merge Bodies
        targets = BodySelection.Create([GetRootPart().Bodies[3],
            GetRootPart().Bodies[1]])
        result = Combine.Merge(targets)
        # EndBlock

        # Create 1 Round
        selection = EdgeSelection.Create(GetRootPart().Bodies[2].Edges[3])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, IN(n_hub_outer_fil), options, None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[2])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[4].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[2])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[3].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        #Horizontal split-----------------------------------

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(0), IN(-5*((shell_id+shell_th)*0.5*shell_th)**0.5/3))
        end = Point2D.Create(IN(100), IN(-5*((shell_id+shell_th)*0.5*shell_th)**0.5/3))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(425.7791465514), IN(0)), 
            -Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[6])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[8].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock


        #Vertical Split-------------------------------------

        # Slice Bodies by Plane
        selection = BodySelection.Create(GetRootPart().Bodies[6], GetRootPart().Bodies[9])
        datum = Plane.PlaneYZ
        result = SplitBody.ByCutter(selection, datum)
        # EndBlock

        # Slice Bodies by Plane
        selection = BodySelection.Create(GetRootPart().Bodies[:])
        datum = Plane.PlaneXY
        result = SplitBody.ByCutter(selection, datum)
        # EndBlock

        #Nozzle split --------------------------------------------

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[17],
            GetRootPart().Bodies[7],
            GetRootPart().Bodies[12],
            GetRootPart().Bodies[2]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[5].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        #Horizontal split ----------------------------------------------


        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5-100), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        end = Point2D.Create(IN(0), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start =  Point2D.Create(IN(shell_id*0.5-100), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(IN(0), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[10],
            GetRootPart().Bodies[20],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[6]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[27].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[20],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[10],
            GetRootPart().Bodies[6]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[26].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock


        #Delete-------------------------------------------------

        # Delete Objects
        selection = Selection.Create([GetRootPart().Bodies[0],
            GetRootPart().Bodies[1],
            GetRootPart().Bodies[3],
            GetRootPart().Bodies[4],
            GetRootPart().Bodies[5],
            GetRootPart().Bodies[8],
            GetRootPart().Bodies[13],
            GetRootPart().Bodies[14],
            GetRootPart().Bodies[15],
            GetRootPart().Bodies[18],
            GetRootPart().Bodies[26],
            GetRootPart().Bodies[27],
            GetRootPart().GetChildren[IDocObject]()[-1]])
        result = Delete.Execute(selection)
        # EndBlock

        # Create 4 Rounds
        selection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[17],
            GetRootPart().Bodies[15].Edges[17],
            GetRootPart().Bodies[14].Edges[17],
            GetRootPart().Bodies[6].Edges[17]])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, IN(n_hub_inner_fil), options, None)
        # EndBlock

        #Named selection-----------------------------------------

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[9].Faces[2],
            GetRootPart().Bodies[18].Faces[4],
            GetRootPart().Bodies[21].Faces[2],
            GetRootPart().Bodies[7].Faces[3],
            GetRootPart().Bodies[12].Faces[4],
            GetRootPart().Bodies[14].Faces[4],
            GetRootPart().Bodies[6].Faces[4],
            GetRootPart().Bodies[8].Faces[4],
            GetRootPart().Bodies[14].Faces[9],
            GetRootPart().Bodies[14].Faces[6],
            GetRootPart().Bodies[6].Faces[6],
            GetRootPart().Bodies[6].Faces[9],
            GetRootPart().Bodies[15].Faces[4],
            GetRootPart().Bodies[0].Faces[4],
            GetRootPart().Bodies[15].Faces[9],
            GetRootPart().Bodies[0].Faces[9],
            GetRootPart().Bodies[15].Faces[6],
            GetRootPart().Bodies[0].Faces[6],
            GetRootPart().Bodies[13].Faces[5],
            GetRootPart().Bodies[2].Faces[5],
            GetRootPart().Bodies[1].Faces[3],
            GetRootPart().Bodies[23].Faces[2],
            GetRootPart().Bodies[19].Faces[4],
            GetRootPart().Bodies[3].Faces[2],
            GetRootPart().Bodies[5].Faces[2],
            GetRootPart().Bodies[16].Faces[4],
            GetRootPart().Bodies[22].Faces[2],
            GetRootPart().Bodies[4].Faces[1],
            GetRootPart().Bodies[10].Faces[1],
            GetRootPart().Bodies[20].Faces[2],
            GetRootPart().Bodies[17].Faces[4],
            GetRootPart().Bodies[11].Faces[2]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Internal Pressue Surface")
        # EndBlock

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[14].Faces[7],
            GetRootPart().Bodies[15].Faces[2],
            GetRootPart().Bodies[0].Faces[2],
            GetRootPart().Bodies[6].Faces[7]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
        # EndBlock

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[5].Faces[3],
            GetRootPart().Bodies[11].Faces[3],
            GetRootPart().Bodies[3].Faces[5],
            GetRootPart().Bodies[9].Faces[5]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Displacement")
        # EndBlock




        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[23],
            GetRootPart().Bodies[15].Edges[23]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[0].Edges[0],
            GetRootPart().Bodies[15].Edges[0]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[7],
            GetRootPart().Bodies[16].Edges[7]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[14],
            GetRootPart().Bodies[6],
            GetRootPart().Bodies[15],
            GetRootPart().Bodies[0]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Body_Sizing")
        # EndBlock


        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[12],
            GetRootPart().Bodies[8],
            GetRootPart().Bodies[2],
            GetRootPart().Bodies[13]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[15].Edges[3],
            GetRootPart().Bodies[0].Edges[4]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[7],
            GetRootPart().Bodies[10],
            GetRootPart().Bodies[4],
            GetRootPart().Bodies[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create([GetRootPart().Bodies[23],
            GetRootPart().Bodies[21],
            GetRootPart().Bodies[22],
            GetRootPart().Bodies[20]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Taper_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[18],
            GetRootPart().Bodies[19],
            GetRootPart().Bodies[17],
            GetRootPart().Bodies[16]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[5],
            GetRootPart().Bodies[18].Edges[5],
            GetRootPart().Bodies[16].Edges[5],
            GetRootPart().Bodies[17].Edges[5]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[5],
            GetRootPart().Bodies[11],
            GetRootPart().Bodies[9],
            GetRootPart().Bodies[3]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[14])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[12])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Transition_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[7],
            GetRootPart().Bodies[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[21])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Junction_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[18])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[9])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[15],
            GetRootPart().Bodies[0],
            GetRootPart().Bodies[6]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[13],
            GetRootPart().Bodies[2],
            GetRootPart().Bodies[8]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Trasition_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[4],
            GetRootPart().Bodies[10]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[23],
            GetRootPart().Bodies[20],
            GetRootPart().Bodies[22]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Junction_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[19],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[17]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_1_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[3],
            GetRootPart().Bodies[5],
            GetRootPart().Bodies[11]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_2_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[14].Faces[0],
            GetRootPart().Bodies[14].Faces[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[2].Edges[9],
            GetRootPart().Bodies[13].Edges[9],
            GetRootPart().Bodies[12].Edges[8],
            GetRootPart().Bodies[8].Edges[8]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock
     
        result = NamedSelection.Rename("Group1", "Nozzle_Circular_Edge_Size")
        # EndBlock
        
        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[7].Edges[1],
        GetRootPart().Bodies[7].Edges[2]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # 
        result = NamedSelection.Rename("Group1", "Head thk_to_Head Transition thk")
        # EndBlock



    else:

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        result = SketchCircle.Create(Point2D.Create(IN(0), IN(0)), IN(head_ir))

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Offset Sketch Curve
        result = SketchOffsetCurve.Create(Selection.Create(GetRootPart().DatumPlanes[0].Curves[0]), IN(-head_th))
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        end = Point2D.Create(IN((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(IN((head_ir+head_th)*cos(asin(head_ir*sin(acos(shell_id*0.5/head_ir))/(head_ir+head_th)))), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(IN(shell_id*0.5 + shell_th), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5 + shell_th), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(IN(shell_id*0.5), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5), IN((head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th))-5*((shell_id+shell_th)*0.5*shell_th)**0.5))
        end = Point2D.Create(IN(shell_id*0.5), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(0), IN(0))
        end = Point2D.Create(IN(0), IN(head_ir+head_th))
        result = SketchLine.Create(start, end)
        # EndBlock


        #Revolution-------------------------------------------------



        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[0].Faces[5])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 3 Faces
        selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[7],
            GetRootPart().Bodies[0].Faces[6],
            GetRootPart().Bodies[0].Faces[1]])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 3 Faces
        selection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[2],
            GetRootPart().Bodies[0].Faces[1],
            GetRootPart().Bodies[0].Faces[0]])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.Add
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        #Nozzle-------------------------------------------------------------------

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        wp_x = (head_ir+head_th)*cos(n_angle)
        wp_y = (head_ir+head_th)*sin(n_angle)
        start = Point2D.Create(IN(0), IN(0))
        end = Point2D.Create(IN(wp_x), IN(wp_y))
        result = SketchLine.Create(start, end,True)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(nozzle_l*cos(n_angle)), IN(nozzle_l*sin(n_angle)))
        end = Point2D.Create(IN(0), IN(0))
        result = SketchLine.Create(start, end,False)
        # EndBlock

        # Offset Sketch Curve
        curvesToOffset = Selection.Create(GetRootPart().DatumPlanes[0].Curves[2])
        offsetDistance = IN(n_bmid/2)
        result = SketchOffsetCurve.Create(curvesToOffset, offsetDistance)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(n_hub_od*0.5*cos(n_angle-DEG(90))), IN(n_hub_od*0.5*sin(n_angle-DEG(90))))
        end = Point2D.Create(IN(0), IN(0))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(nozzle_l*cos(n_angle)), IN(nozzle_l*sin(n_angle)))
        end = Point2D.Create(IN(nozzle_l*cos(n_angle) + (n_neck_od/2*cos(n_angle-DEG(90)))), IN(nozzle_l*sin(n_angle) + (n_neck_od/2*sin(n_angle-DEG(90)))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch LineSelection.Empty()
        start = Point2D.Create(IN(wp_x +n_hub_hg*cos(n_angle)), IN(wp_y+n_hub_hg*sin(n_angle)))
        end = Point2D.Create(IN(0), IN(0))
        result = SketchLine.Create(start, end,False)
        # EndBlock

        # Offset Sketch Curve
        curvesToOffset = Selection.Create(GetRootPart().DatumPlanes[0].Curves[6])
        offsetDistance = IN(n_hub_od*0.5)
        result = SketchOffsetCurve.Create(curvesToOffset, offsetDistance)
        # EndBlock

        # Sketch Line
        l = (n_hub_od - n_neck_od)/2/cos(n_taper)
        start = Point2D.Create(IN(wp_x +n_hub_hg*cos(n_angle) + (n_hub_od/2*cos(n_angle-DEG(90))) + l*cos(n_angle + n_taper)), IN(wp_y+n_hub_hg*sin(n_angle) + (n_hub_od/2*sin(n_angle-DEG(90))) + l*sin(n_angle + n_taper)))
        end = Point2D.Create(IN(wp_x +n_hub_hg*cos(n_angle) + (n_hub_od/2*cos(n_angle-DEG(90)))), IN(wp_y+n_hub_hg*sin(n_angle) + (n_hub_od/2*sin(n_angle-DEG(90)))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(wp_x +n_hub_hg*cos(n_angle) + (n_hub_od/2*cos(n_angle-DEG(90))) + l*cos(n_angle + n_taper)), IN(wp_y+n_hub_hg*sin(n_angle) + (n_hub_od/2*sin(n_angle-DEG(90))) + l*sin(n_angle + n_taper)))
        end = Point2D.Create(IN(nozzle_l*cos(n_angle) + (n_neck_od/2*cos(n_angle-DEG(90)))), IN(nozzle_l*sin(n_angle) + (n_neck_od/2*sin(n_angle-DEG(90)))))
        result = SketchLine.Create(start, end)
        # EndBlock


        #Nozzle Revolution---------------------------------------------------------------------

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[2].Faces[3])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.ForceCut
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Revolve 1 Face
        selection = FaceSelection.Create(GetRootPart().Bodies[2].Faces[1])
        axisSelection = Selection.Create(GetRootPart().Curves[0])
        axis = RevolveFaces.GetAxisFromSelection(selection, axisSelection)
        options = RevolveFaceOptions()
        options.ExtrudeType = ExtrudeType.ForceIndependent
        result = RevolveFaces.Execute(selection, axis, DEG(-360), options)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[3])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[1].Faces[1])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Delete Objects
        selection = BodySelection.Create(GetRootPart().Bodies[4])
        result = Combine.RemoveRegions(selection)
        # EndBlock


        #Nozzle split------------------------------------------

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(0), IN(0))
        end = Point2D.Create(IN(head_ir*cos(n_angle) + n_lip_od/2*cos(n_angle-DEG(90))), IN(head_ir*sin(n_angle) + n_lip_od/2*sin(n_angle-DEG(90))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(0), IN(0))
        end = Point2D.Create(IN(head_ir*cos(n_angle) + (n_lip_od/2 +n_split_offset)*cos(n_angle-DEG(90))), IN(head_ir*sin(n_angle) + (n_lip_od/2+n_split_offset)*cos(n_angle-DEG(90))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock


        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[2])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
            Direction.Create(cos(n_angle), sin(n_angle), 0)), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[2])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
            Direction.Create(cos(n_angle), sin(n_angle), 0)), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[0])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock


        # Merge Bodies
        targets = BodySelection.Create([GetRootPart().Bodies[3],
            GetRootPart().Bodies[1]])
        result = Combine.Merge(targets)
        # EndBlock

        # Create 1 Round
        selection = EdgeSelection.Create(GetRootPart().Bodies[2].Edges[3])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, IN(n_fillet_rad), options, None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[2])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[4].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[2])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[3].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        #Horizontal split-----------------------------------

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(0), IN(-5*((shell_id+shell_th)*0.5*shell_th)**0.5/3))
        end = Point2D.Create(IN(100), IN(-5*((shell_id+shell_th)*0.5*shell_th)**0.5/3))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(425.7791465514), IN(0)), 
            -Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create(GetRootPart().Bodies[6])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[8].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock


        #Vertical Split-------------------------------------

        # Slice Bodies by Plane
        selection = BodySelection.Create(GetRootPart().Bodies[6], GetRootPart().Bodies[9])
        datum = Plane.PlaneYZ
        result = SplitBody.ByCutter(selection, datum)
        # EndBlock

        # Slice Bodies by Plane
        selection = BodySelection.Create(GetRootPart().Bodies[:])
        datum = Plane.PlaneXY
        result = SplitBody.ByCutter(selection, datum)
        # EndBlock

        #Nozzle split --------------------------------------------

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[17],
            GetRootPart().Bodies[7],
            GetRootPart().Bodies[12],
            GetRootPart().Bodies[2]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[5].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        #Horizontal split ----------------------------------------------

        # Set Sketch Plane
        selection = Plane.PlaneXY
        result = ViewHelper.SetSketchPlane(selection, None)
        # EndBlock

        # Set New Sketch
        result = SketchHelper.StartConstraintSketching()
        # EndBlock

        # Sketch Line
        start = Point2D.Create(IN(shell_id*0.5-100), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        end = Point2D.Create(IN(0), IN(head_ir*sin(acos(shell_id*0.5/head_ir))))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Sketch Line
        start =  Point2D.Create(IN(shell_id*0.5-100), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        end = Point2D.Create(IN(0), IN(head_ir*sin(acos(shell_id*0.5/head_ir)) - 3*(shell_th-head_th)))
        result = SketchLine.Create(start, end)
        # EndBlock

        # Solidify Sketch
        mode = InteractionMode.Solid
        result = ViewHelper.SetViewMode(mode, None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Revolve 1 Sketch Curve
        selection = Selection.Create(GetRootPart().Curves[1])
        result = RevolveEdges.Execute(selection, Line.Create(Point.Create(IN(0), IN(0), IN(0)), 
            Direction.DirY), DEG(360), False, ExtrudeType.None)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[10],
            GetRootPart().Bodies[20],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[6]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[27].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock

        # Slice Body by Faces
        selection = BodySelection.Create([GetRootPart().Bodies[20],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[10],
            GetRootPart().Bodies[6]])
        toolFaces = FaceSelection.Create(GetRootPart().Bodies[26].Faces[0])
        result = SplitBody.ByCutter(selection, toolFaces, True)
        # EndBlock


        # Delete Objects
        selection = Selection.Create([GetRootPart().Bodies[0],
            GetRootPart().Bodies[1],
            GetRootPart().Bodies[3],
            GetRootPart().Bodies[5],
            GetRootPart().Bodies[4],
            GetRootPart().Bodies[8],
            GetRootPart().Bodies[13],
            GetRootPart().Bodies[14],
            GetRootPart().Bodies[15],
            GetRootPart().Bodies[18],
            GetRootPart().Bodies[26],
            GetRootPart().Bodies[27],
            GetRootPart().GetChildren[IDocObject]()[-1]])
        result = Delete.Execute(selection)
        # EndBlock

        #Fillets-------------------------------------------------

        # Create 4 Rounds
        selection = EdgeSelection.Create([GetRootPart().Bodies[6].Edges[25],
            GetRootPart().Bodies[14].Edges[25],
            GetRootPart().Bodies[15].Edges[25],
            GetRootPart().Bodies[0].Edges[25]])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, IN(n_neck_fillet), options, None)
        # EndBlock


        # Create 4 Rounds
        selection = EdgeSelection.Create([GetRootPart().Bodies[14].Edges[22],
            GetRootPart().Bodies[15].Edges[19],
            GetRootPart().Bodies[0].Edges[19],
            GetRootPart().Bodies[6].Edges[22]])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, IN(n_hub_outer_fil), options, None)
        # EndBlock


        # Create 4 Rounds
        selection = EdgeSelection.Create([GetRootPart().Bodies[14].Edges[19],
            GetRootPart().Bodies[6].Edges[19],
            GetRootPart().Bodies[0].Edges[21],
            GetRootPart().Bodies[15].Edges[21]])
        options = ConstantRoundOptions()
        result = ConstantRound.Execute(selection, IN(n_hub_inner_fil), options, None)
        # EndBlock

        #Named selection-----------------------------------------

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[0].Faces[5],
            GetRootPart().Bodies[2].Faces[5],
            GetRootPart().Bodies[13].Faces[5],
            GetRootPart().Bodies[15].Faces[5],
            GetRootPart().Bodies[14].Faces[2],
            GetRootPart().Bodies[6].Faces[2],
            GetRootPart().Bodies[8].Faces[4],
            GetRootPart().Bodies[6].Faces[13],
            GetRootPart().Bodies[0].Faces[13],
            GetRootPart().Bodies[0].Faces[7],
            GetRootPart().Bodies[6].Faces[4],
            GetRootPart().Bodies[15].Faces[13],
            GetRootPart().Bodies[15].Faces[7],
            GetRootPart().Bodies[14].Faces[4],
            GetRootPart().Bodies[14].Faces[13],
            GetRootPart().Bodies[12].Faces[4],
            GetRootPart().Bodies[7].Faces[3],
            GetRootPart().Bodies[1].Faces[3],
            GetRootPart().Bodies[10].Faces[1],
            GetRootPart().Bodies[4].Faces[1],
            GetRootPart().Bodies[21].Faces[2],
            GetRootPart().Bodies[18].Faces[4],
            GetRootPart().Bodies[9].Faces[2],
            GetRootPart().Bodies[3].Faces[2],
            GetRootPart().Bodies[19].Faces[4],
            GetRootPart().Bodies[23].Faces[2],
            GetRootPart().Bodies[22].Faces[2],
            GetRootPart().Bodies[20].Faces[2],
            GetRootPart().Bodies[16].Faces[4],
            GetRootPart().Bodies[17].Faces[4],
            GetRootPart().Bodies[5].Faces[2],
            GetRootPart().Bodies[11].Faces[2]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Internal Pressue Surface")
        # EndBlock

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[14].Faces[6],
            GetRootPart().Bodies[15].Faces[10],
            GetRootPart().Bodies[0].Faces[10],
            GetRootPart().Bodies[6].Faces[6]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle Pressure Thrust")
        # EndBlock

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[3].Faces[5],
            GetRootPart().Bodies[9].Faces[5],
            GetRootPart().Bodies[5].Faces[3],
            GetRootPart().Bodies[11].Faces[3]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Displacement")
        # EndBlock


        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[15].Edges[33],
            GetRootPart().Bodies[0].Edges[33]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Inner_Fillet_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[15].Edges[28],
            GetRootPart().Bodies[0].Edges[29],
            GetRootPart().Bodies[15].Edges[25],
            GetRootPart().Bodies[0].Edges[24]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Outer_Fillet_Edge_Size")
        # EndBlock


        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[19].Edges[7],
            GetRootPart().Bodies[16].Edges[7]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Edge_Size")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[6],
            GetRootPart().Bodies[14],
            GetRootPart().Bodies[15],
            GetRootPart().Bodies[0]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Body_Sizing")
        # EndBlock


        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[12],
            GetRootPart().Bodies[8],
            GetRootPart().Bodies[13],
            GetRootPart().Bodies[2]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[1].Edges[3],
            GetRootPart().Bodies[1].Edges[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Head_Transition_Edge_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[1],
            GetRootPart().Bodies[4],
            GetRootPart().Bodies[7],
            GetRootPart().Bodies[10]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[21],
            GetRootPart().Bodies[20],
            GetRootPart().Bodies[23],
            GetRootPart().Bodies[22]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Taper_Body_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[18],
            GetRootPart().Bodies[17],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[19]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[18].Edges[5],
            GetRootPart().Bodies[17].Edges[5],
            GetRootPart().Bodies[16].Edges[5],
            GetRootPart().Bodies[19].Edges[5]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Transition_Edge_Sizing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[9],
            GetRootPart().Bodies[11],
            GetRootPart().Bodies[5],
            GetRootPart().Bodies[3]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Body_Sizing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[14])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[12])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Transition_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[7],
            GetRootPart().Bodies[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[21])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shell_Junction_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[18])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_1")
        # EndBlock

        # Create Named Selection Group
        primarySelection = BodySelection.Create(GetRootPart().Bodies[9])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[15],
            GetRootPart().Bodies[0],
            GetRootPart().Bodies[6]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[13],
            GetRootPart().Bodies[2],
            GetRootPart().Bodies[8]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Trasition_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[4],
            GetRootPart().Bodies[10]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[23],
            GetRootPart().Bodies[20],
            GetRootPart().Bodies[22]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Head_To_Shel_Junction_Meshing_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[19],
            GetRootPart().Bodies[16],
            GetRootPart().Bodies[17]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_1_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = Selection.CreateByObjects([GetRootPart().Bodies[3],
            GetRootPart().Bodies[5],
            GetRootPart().Bodies[11]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Shell_Meshing_2_2")
        # EndBlock

        # Create Named Selection Group
        primarySelection = FaceSelection.Create([GetRootPart().Bodies[14].Faces[0],
            GetRootPart().Bodies[14].Faces[1]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # Rename Named Selection
        result = NamedSelection.Rename("Group1", "Nozzle_Face_Sizing")
        # EndBlock

        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[2].Edges[9],
            GetRootPart().Bodies[13].Edges[9],
            GetRootPart().Bodies[12].Edges[8],
            GetRootPart().Bodies[8].Edges[8]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # 
        result = NamedSelection.Rename("Group1", "Nozzle_head_Circumferencial_Sizing")
        # EndBlock 
        
        # Fill
        selection = FaceSelection.Create([GetRootPart().Bodies[6].Faces[9],
        GetRootPart().Bodies[14].Faces[9],
        GetRootPart().Bodies[0].Faces[6],
        GetRootPart().Bodies[15].Faces[6]])
        secondarySelection = Selection.Empty()
        options = FillOptions()
        result = Fill.Execute(selection, secondarySelection, options, FillMode.ThreeD, None)
        # EndBlock
        
        # Create Named Selection Group
        primarySelection = EdgeSelection.Create([GetRootPart().Bodies[7].Edges[1],
        GetRootPart().Bodies[7].Edges[2]])
        secondarySelection = Selection.Empty()
        result = NamedSelection.Create(primarySelection, secondarySelection)
        # EndBlock

        # 
        result = NamedSelection.Rename("Group1", "Head thk_to_Head Transition thk")
        # EndBlock



# Rotate About Y Handle
selection = BodySelection.Create([GetRootPart().Bodies[0],
    GetRootPart().Bodies[1],
    GetRootPart().Bodies[2],
    GetRootPart().Bodies[3],
    GetRootPart().Bodies[4],
    GetRootPart().Bodies[5],
    GetRootPart().Bodies[6],
    GetRootPart().Bodies[7],
    GetRootPart().Bodies[8],
    GetRootPart().Bodies[9],
    GetRootPart().Bodies[10],
    GetRootPart().Bodies[11],
    GetRootPart().Bodies[12],
    GetRootPart().Bodies[13],
    GetRootPart().Bodies[14],
    GetRootPart().Bodies[15],
    GetRootPart().Bodies[16],
    GetRootPart().Bodies[17],
    GetRootPart().Bodies[18],
    GetRootPart().Bodies[19],
    GetRootPart().Bodies[20],
    GetRootPart().Bodies[21],
    GetRootPart().Bodies[22],
    GetRootPart().Bodies[23]])
anchorPoint = Move.GetAnchorPoint(selection)
axis = Line.Create(anchorPoint, Direction.DirY)
options = MoveOptions()
result = Move.Rotate(selection, axis, DEG(-180), options)
# EndBlock


# Make Components
selection = BodySelection.Create([GetRootPart().Bodies[0],
    GetRootPart().Bodies[1],
    GetRootPart().Bodies[2],
    GetRootPart().Bodies[3],
    GetRootPart().Bodies[4],
    GetRootPart().Bodies[5],
    GetRootPart().Bodies[6],
    GetRootPart().Bodies[7],
    GetRootPart().Bodies[8],
    GetRootPart().Bodies[9],
    GetRootPart().Bodies[10],
    GetRootPart().Bodies[11],
    GetRootPart().Bodies[12],
    GetRootPart().Bodies[13],
    GetRootPart().Bodies[14],
    GetRootPart().Bodies[15],
    GetRootPart().Bodies[16],
    GetRootPart().Bodies[17],
    GetRootPart().Bodies[18],
    GetRootPart().Bodies[19],
    GetRootPart().Bodies[20],
    GetRootPart().Bodies[21],
    GetRootPart().Bodies[22],
    GetRootPart().Bodies[23]])
result = ComponentHelper.MoveBodiesToComponent(selection, None)
# EndBlock


n_angle = DEG(Parameters.Nozzle_Angle)

# Create Origin
origin = Point.Create(MM(nozzle_l*cos(n_angle)), MM(nozzle_l*sin(n_angle)), MM(0))
x_Direction = Direction.Create(cos(n_angle-DEG(90)), sin(n_angle-DEG(90)), 0)
y_Direction = Direction.Create(cos(n_angle), sin(n_angle), 0)
result = DatumOriginCreator.Create(origin, x_Direction, y_Direction, None)
# EndBlock

# Share Topology
options = ShareTopologyOptions()
options.Tolerance = MM(0.2)
result = ShareTopology.FindAndFix(options)
# EndBlock